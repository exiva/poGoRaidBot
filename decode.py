from base64 import b64decode
import json
from pymongo import MongoClient
from google.protobuf.json_format import MessageToJson

from poGoRaidBot.protos.pogoprotos.networking.responses.fort_search_response_pb2 import FortSearchResponse
from poGoRaidBot.protos.pogoprotos.networking.responses.encounter_response_pb2 import EncounterResponse
from poGoRaidBot.protos.pogoprotos.networking.responses.get_map_objects_response_pb2 import GetMapObjectsResponse
from poGoRaidBot.protos.pogoprotos.networking.responses.gym_get_info_response_pb2 import GymGetInfoResponse
from poGoRaidBot.protos.pogoprotos.networking.responses.fort_details_response_pb2 import FortDetailsResponse
#
# from protos.pogoprotos.enums.team_color_pb2 import _TEAMCOLOR
# from protos.pogoprotos.enums.pokemon_id_pb2 import _POKEMONID
# from protos.pogoprotos.enums.pokemon_move_pb2 import _POKEMONMOVE
# from protos.pogoprotos.enums.raid_level_pb2 import _RAIDLEVEL
# from protos.pogoprotos.enums.form_pb2 import _FORM
# from protos.pogoprotos.enums.weather_condition_pb2 import _WEATHERCONDITION

from poGoRaidBot.protos.pogoprotos.data.quests.quest_reward_pb2 import _QUESTREWARD_TYPE

# Start database
client = MongoClient('192.168.1.35', 27017)

try:
    client.is_primary
except ServerSelectionTimeoutError:
    print("Couldn't connect to mongoDB.")
    raise

db = client['data']
# get our collections from the database.
gym_db = db.gyms
db_pokestops = db.pokestops
db_raids = db.raids

# gym_db = db_gyms.find_one({'id': '9ed570deb1ea47eab2505df75a80c40f.16'})
# print(foo['name'])

#ex raid gym
# message = "CroFCICAgICErJ\\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\\/gKRQXkRAGdNNtM9HaFLACtYECICAgIDU\\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\\/2hSwCISEf4JfPKrXkRAGcJjIq7\\/aFLAIhIR6OZ8YqxeREAZK2jyLwFpUsAiEhFq7G\\/prl5EQBkraPIvAWlSwCISEaTFYJCwXkRAGQNUUiz+aFLAIhIRC4ZfILBeREAZ7jiCqvxoUsAiEhFLZSg8ul5EQBnuOIKq\\/GhSwCISEYYQGsO8XkRAGe44gqr8aFLAIhIRH9A5BbleREAZK2jyLwFpUsAiEhHKwkYOtl5EQBnCYyKu\\/2hSwCISEejxSF63XkRAGftOkjMEaVLAIhIReesmzLleREAZhBKyKPtoUsAiEhE78kK+tF5EQBmEErIo+2hSwCISEbZnIXy4XkRAGUNbQaP2aFLAIhIRoNIcnLdeREAZbaign\\/NoUsAiEhFcNB8MuF5EQBmCB3Eh9WhSwCISEbJfLYW1XkRAGYIHcSH1aFLAIhIRvTfK7sJeREAZK0cvGu9oUsAiEhGsDcd+wl5EQBnAul6Y7WhSwCISEQt85XC9XkRAGcC6XpjtaFLAIhIRW5HtCbpeREAZ6n+9lOpoUsAiEhEf1c7Qul5EQBlCgnqN5GhSwCISEYKY+BK3XkRAGX\\/R7BLpaFLAIhIROGgth6xeREAZwBcckedoUsAiEhEthk0SpF5EQBlCgnqN5GhSwCISEfqlUYKkXkRAGaxSSw\\/maFLAIhIR8uN37ZxeREAZrFJLD+ZoUsAiEhHU3pWWnF5EQBnAul6Y7WhSwCISEXzcmAadXkRAGStHLxrvaFLAIhIRCtKWTaFeREAZggdxIfVoUsAiEhFD\\/4KEol5EQBlByP+b8GhSwCISEdO3WGCuXkRAGUNbQaP2aFLAIhIRoVZrKa1eREAZhBKyKPtoUsAiEhFqMJAkpV5EQBnE4OGm+WhSwCISEXnlf8umXkRAGUNbQaP2aFLAIhIRiCjX+pVeREAZxODhpvloUsAiEhHPYs3xmF5EQBmEErIo+2hSwCISEf0TAt+LXkRAGcTg4ab5aFLAIhIRBqP+\\/opeREAZQ1tBo\\/ZoUsAiEhG2HfiuiV5EQBkCPtAd8mhSwCISEYOU9T6JXkRAGUHI\\/5vwaFLAIhIRWeGkf5peREAZK0cvGu9oUsAiEhGBbLpTjV5EQBlCgnqN5GhSwCISEb4b3wWKXkRAGep\\/vZTqaFLAIhIRM67d3I1eREAZK0cvGu9oUsAiEhGtYehVi15EQBkrRy8a72hSwCISEbBKBFGDXkRAGcC6XpjtaFLAIhIRuioHwYNeREAZK0cvGu9oUsAiEhFJ\\/RA6gV5EQBkrRy8a72hSwCISEZyXGrN+XkRAGStHLxrvaFLAIhIRvRQLWoBeREAZACOOFuxoUsAiEhEbfhFjfV5EQBnqf72U6mhSwCISEeXaB+p\\/XkRAGep\\/vZTqaFLAIhIRoH3wh4ReREAZf9HsEuloUsAiEhFDlPoAgl5EQBl\\/0ewS6WhSwCISEcmGF2x6XkRAGX\\/R7BLpaFLAIhIRE3YifnReREAZrFJLD+ZoUsAiEhE9fzLXcl5EQBl\\/0ewS6WhSwCISEV0WLc51XkRAGep\\/vZTqaFLAIhIRXRYtznVeREAZ6n+9lOpoUsAiEhEW6Rrcel5EQBnqf72U6mhSwCISEQQdHkx7XkRAGQAjjhbsaFLAIhIRYU8qNXleREAZwLpemO1oUsAiEhGTIy2leV5EQBkrRy8a72hSwCISEVoAPCd0XkRAGcC6XpjtaFLAIhIRn84+l3ReREAZK0cvGu9oUsAiEhHkN0hXdl5EQBmCB3Eh9WhSwCISEeRoK3x9XkRAGW2ooJ\\/zaFLAIhIR0kAyhXpeREAZAj7QHfJoUsAiEhFkyS8Vel5EQBlByP+b8GhSwCISEfyrE6qBXkRAGUHI\\/5vwaFLAIhIRY9wJMYReREAZQcj\\/m\\/BoUsAiEhHKoRr6gl5EQBmCB3Eh9WhSwCISET1+GIqCXkRAGW2ooJ\\/zaFLAIhIRT+YnU4FeREAZrqMRJfhoUsAiEhHAXR7ag15EQBmuoxEl+GhSwCISEfaWHGqDXkRAGUNbQaP2aFLAIhIRR0IMWIleREAZxODhpvloUsAiEhE6sg3IiV5EQBmEErIo+2hSwCISEVKlF0GHXkRAGYQSsij7aFLAIhIRMGAhuoReREAZhBKyKPtoUsAiEhFlPz0lfV5EQBmEErIo+2hSwCISEUHeO7V8XkRAGcTg4ab5aFLAIhIRozYxzH5eREAZrqMRJfhoUsAiEhHFdS9cfl5EQBlDW0Gj9mhSwCISETvWSzd3XkRAGa6jESX4aFLAIhIR8WI1HIBeREAZ7jiCqvxoUsAiEhFIajaMgF5EQBkDVFIs\\/mhSwCISEYh2PwV+XkRAGQNUUiz+aFLAIhIRh0xAdX5eREAZwmMirv9oUsAiEhHQ7TdsgV5EQBkraPIvAWlSwCISEZUdSe57XkRAGcJjIq7\\/aFLAIhIRarZRZ3leREAZwmMirv9oUsAiEhEZWFLXeV5EQBkraPIvAWlSwCISEV9tQVV\\/XkRAGT5hwrECaVLAIhIRc4kbAYleREAZK2jyLwFpUsAiEhHUmyIqhV5EQBnuOIKq\\/GhSwCISEezjGLGHXkRAGe44gqr8aFLAIhIR5NLno5VeREAZK2jyLwFpUsAiEhGp99nall5EQBnuOIKq\\/GhSwCISEevTuw+hXkRAGWIxYrUFaVLAIhIRf+i7f6FeREAZdAgyNwdpUsAiEhH8K\\/OMk15EQBk+YcKxAmlSwCISEY0Y\\/nWRXkRAGftOkjMEaVLAIhIRtIEHH5FeREAZpEmhvAtpUsAiEhHcn\\/NMlV5EQBkv1AG5CGlSwCISEdLPEAiPXkRAGVzzcD4NaVLAIhIRfbE+1YJeREAZwJFAwA5pUsBasgEIWhUpkANEGQdnIgYlxuJQIiM3ZDNmODFlZTI0Nzg0ZGFiYjY2NmQ5YzMxYTNkMjIyMi4xNip3aHR0cDovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vOUZBRHBPSVlRM2VfakxNa2dXQTd0cVRTVEg4SE1lQzd5M0JzenZKSDBFV0cxUFUydi13cW1EVGxXaWdRS0tvcWZra3RWZklxLUJFa0xJNnBFS0xralEyAhABCo4VCICAgIC0q5\\/hiQEQh5SPzoEtGkIKIzgxNDIxOGI5MDEzMDQ4N2RiYTIzYzk0ODAwOGYzMGJmLjE2EM+5mvT4LBm5GAPrOF5EQCFA\\/Pz34GhSwEABSAEiEhHUE0x0ZF5EQBmEpqkL42hSwCISEdQTTHRkXkRAGYSmqQvjaFLAIhIRpoElUmdeREAZ1LGUgttoUsAiEhFm1RL5aF5EQBkLZ\\/J+2GhSwCISEQVgCoBrXkRAGQtn8n7YaFLAIhIRrmMVrVxeREAZzeXb9dBoUsAiEhFlKSoPWF5EQBmCSa130mhSwCISEVp5QthWXkRAGacwIf3WaFLAIhIRKfwqGFVeREAZzeXb9dBoUsAiEhH\\/PlDuRV5EQBnN5dv10GhSwCISERdSVl5GXkRAGYJJrXfSaFLAIhIRz6tQ5UheREAZgkmtd9JoUsAiEhFQzUpsS15EQBmCSa130mhSwCISEYA8a2FXXkRAGXC\\/2InhaFLAIhIRuZpk6FleREAZcL\\/YieFoUsAiEhEOpnHaVF5EQBlwv9iJ4WhSwCISEXrQfcxPXkRAGXC\\/2InhaFLAIhIRf9Z6ZUxeREAZTM82ht5oUsAiEhFVfJKnSF5EQBmEpqkL42hSwCISEVIToRJBXkRAGYSmqQvjaFLAIhIRaL+PSUJeREAZTM82ht5oUsAiEhErKJS5Ql5EQBkJzQcI4GhSwCISEa6Rj1s8XkRAGdSxlILbaFLAIhIRZZmcvTdeREAZO8ZlBN1oUsAiEhG435dNN15EQBnUsZSC22hSwCISEdDUk9Q5XkRAGdSxlILbaFLAIhIR94WoHzNeREAZTM82ht5oUsAiEhHy3KyPM15EQBkJzQcI4GhSwCISEZR\\/oSQ7XkRAGQnNBwjgaFLAIhIRErGllDteREAZcL\\/YieFoUsAiEhEutKkEPF5EQBmEpqkL42hSwCISEUWwrX05XkRAGYSmqQvjaFLAIhIRjQWx\\/zNeREAZcL\\/YieFoUsAiEhEuU7joMV5EQBmEpqkL42hSwCISEVcGrxEuXkRAGUzPNobeaFLAIhIRZVezgS5eREAZCc0HCOBoUsAiEhFOgcFXH15EQBkJzQcI4GhSwCISEbP+tv4gXkRAGTvGZQTdaFLAIhIRvDCkvCReREAZC2fyfthoUsAiEhEkrqazJ15EQBkaksMA2mhSwCISEezPnUgvXkRAGRqSwwDaaFLAIhIRqgCfTCReREAZpzAh\\/dZoUsAiEhGMoYCeHF5EQBln\\/DjyzWhSwCISEd6UghcaXkRAGWf8OPLNaFLAIhIRMQyDmideREAZzeXb9dBoUsAiEhFmUGbfLV5EQBm1dmdwzGhSwCISEXJ\\/WnQ1XkRAGbV2Z3DMaFLAIhIRqrd3rTReREAZgkmtd9JoUsAiEhEjhWwwQl5EQBnv7k971WhSwCISEb3UZsBBXkRAGeOhfvnTaFLAIhIRxLBZ6T1eREAZxHYKdM9oUsAiEhEbSxzwPF5EQBmoZn1lw2hSwCISEctAO70wXkRAGVAwT+fEaFLAIhIRAqFb+iReREAZqKHy6sdoUsAiEhHJjnU3GV5EQBmv5ZXuymhSwCISEXSRKdcUXkRAGXHMY9y7aFLAIhIRNR0NDhZeREAZmoHtVrdoUsAiEhG\\/mezQIV5EQBkUF0lTtGhSwCISETGBBqQwXkRAGXHMY9y7aFLAIhIROEb9sTVeREAZccxj3LtoUsAiEhHS\\/wErM15EQBlxzGPcu2hSwCISEXKNCpszXkRAGb7ONV69aFLAIhIRACkEoDteREAZtcUH4L5oUsAiEhHsEMAWO15EQBkUF0lTtGhSwCISEfUJ3GY8XkRAGeClv9i4aFLAIhIRh2nW7T5eREAZ4KW\\/2LhoUsAiEhHvQc19Pl5EQBmage1Wt2hSwCISEVBmxwRBXkRAGZqB7Va3aFLAIhIRDIa0JEBeREAZFBdJU7RoUsAiEhGazZpASl5EQBkUF0lTtGhSwCISEe3Sk8dMXkRAGRQXSVO0aFLAIhIREWmdN01eREAZAVIb1bVoUsAiEhEZgrSZSF5EQBmage1Wt2hSwCISEWUGuxJGXkRAGZqB7Va3aFLAIhIR4jbEgkZeREAZ4KW\\/2LhoUsAiEhGeusZ5SV5EQBnSvpFaumhSwCISEQUEwABMXkRAGdK+kVq6aFLAIhIRzwXaUE1eREAZtcUH4L5oUsAiEhFC8uRLRV5EQBm+zjVevWhSwCISEeJP3NtEXkRAGXHMY9y7aFLAIhIRNQDl1jxeREAZ0r6RWrpoUsAiEhGNYfa2PV5EQBm+zjVevWhSwCISEcJ3AR5BXkRAGVqx2WHAaFLAIhIRjV8T9UReREAZUDBP58RoUsAiEhFoLCZXQF5EQBmm7iBpxmhSwCISEV1dCPpMXkRAGabuIGnGaFLAIhIRer4BgU9eREAZpu4gacZoUsAiEhFb5\\/oHUl5EQBmm7iBpxmhSwCISEY93\\/5JJXkRAGahmfWXDaFLAIhIR9wr5GUxeREAZqGZ9ZcNoUsAiEhFqlOO3UF5EQBmqkavjwWhSwCISEVZx20dQXkRAGVqx2WHAaFLAIhIREXfF3FdeREAZWrHZYcBoUsAiEhEws71jWl5EQBlasdlhwGhSwCISER\\/ixdNaXkRAGaqRq+PBaFLAIhIRWCbdNVZeREAZqGZ9ZcNoUsAiEhEFzuSTXF5EQBmoofLqx2hSwCISERWD7AxaXkRAGaih8urHaFLAIhIR4z\\/NMWFeREAZpu4gacZoUsAiEhE3u9ShYV5EQBmoofLqx2hSwCISEZyWtM9lXkRAGVAwT+fEaFLAIhIRFre16lxeREAZWrHZYcBoUsAiEhHBgq1xX15EQBlasdlhwGhSwCISET0IlA9kXkRAGbXFB+C+aFLAIhIR\\/a+ciGFeREAZtcUH4L5oUsAiEhFuWIuoYF5EQBlxzGPcu2hSwCISEa0fkypbXkRAGdK+kVq6aFLAIhIRzlatelxeREAZtcUH4L5oUsAiEhHofsPuUV5EQBm+zjVevWhSwCISEY8lvHVUXkRAGb7ONV69aFLAIhIRt826flFeREAZccxj3LtoUsAiEhEYEKQTWV5EQBlxzGPcu2hSwCISEfN9oSVTXkRAGeClv9i4aFLAIhIR3gWKulpeREAZ4KW\\/2LhoUsBapgEI\\/wEVa7ccRBnxPkgrcWjMaSIjODE0MjE4YjkwMTMwNDg3ZGJhMjNjOTQ4MDA4ZjMwYmYuMTYqaGh0dHA6Ly9saDYuZ2dwaHQuY29tL182anl1dU0tWGxnUEd5OUkwNzdJWGxlRU1xWnM2MndmLXV1M0pBZkVBTExtcFUydTZNOTh3WTdBSExNRlRHZEZXT0Y5dVhWYnFiWlJhbGN2Wl9vMgQQASgBWqQBCLwCFWu3HEQZ6RvfQ5diJP0iIzgxNDIxOGI5MDEzMDQ4N2RiYTIzYzk0ODAwOGYzMGJmLjE2KmhodHRwOi8vbGg2LmdncGh0LmNvbS9fNmp5dXVNLVhsZ1BHeTlJMDc3SVhsZUVNcVpzNjJ3Zi11dTNKQWZFQUxMbXBVMnU2TTk4d1k3QUhMTUZUR2RGV09GOXVYVmJxYlpSYWxjdlpfbzICEAIKmhoIgICAgLyrn+GJARCHlI\\/OgS0aQgojNzU0ZjE1MTFhMWFhNDFiMmI3Nzc5NDRiMjgwMTIxMGMuMTYQ5dSNq4EtGYl8l1KXXkRAIboQqz\\/CaFLAQAFIARpCCiNkMDZlZTc1ZGQ1ZGI0ZmQzOTExOTIyZGFmMWY0NWYwMi4xNhDztYbf+CwZzR5oBYZeREAh5WIMrONoUsBAAUgBIhIRv42CJmZeREAZvs41Xr1oUsAiEhFDKIuWZl5EQBm1xQfgvmhSwCISEQniRkd4XkRAGbXFB+C+aFLAIhIRJ4QtAHReREAZ4KW\\/2LhoUsAiEhHqo\\/BEel5EQBkUF0lTtGhSwCISEaD6vU6KXkRAGZqB7Va3aFLAIhIRlgDiuYJeREAZmoHtVrdoUsAiEhE2zdAui15EQBnSvpFaumhSwCISEe7w2Z6LXkRAGXHMY9y7aFLAIhIRQ+biDoxeREAZvs41Xr1oUsAiEhGf2Pf3iV5EQBm1xQfgvmhSwCISEcQK+wCHXkRAGb7ONV69aFLAIhIRxAr7AIdeREAZvs41Xr1oUsAiEhGsyAZ6hF5EQBm+zjVevWhSwCISEb2GD+qEXkRAGbXFB+C+aFLAIhIR3mQJg4FeREAZccxj3LtoUsAiEhEEjjNeel5EQBm+zjVevWhSwCISETVmMVV9XkRAGbXFB+C+aFLAIhIRdSQ0s4NeREAZqGZ9ZcNoUsAiEhGC9CtDg15EQBmqkavjwWhSwCISEbh3IMqFXkRAGaqRq+PBaFLAIhIROm4AaIpeREAZWrHZYcBoUsAiEhFy1QjYil5EQBmqkavjwWhSwCISES\\/5DD+OXkRAGVAwT+fEaFLAIhIRvBgZuIteREAZUDBP58RoUsAiEhEQACUxiV5EQBlQME\\/nxGhSwCISEeaDNBGKXkRAGaih8urHaFLAIhIRuXI3eI1eREAZr+WV7spoUsAiEhEoTHtOfl5EQBmv5ZXuymhSwCISEULWhcd7XkRAGa\\/lle7KaFLAIhIRMyOkMnReREAZr+WV7spoUsAiEhHoYk+3eF5EQBlasdlhwGhSwCISEaNidIl0XkRAGahmfWXDaFLAIhIR3QqIe29eREAZqGZ9ZcNoUsAiEhEv0pptal5EQBmoZn1lw2hSwCISERN2wJ1sXkRAGa\\/lle7KaFLAIhIRqku5LWxeREAZVknEbMloUsAiEhEbcscNbV5EQBm1dmdwzGhSwCISES2vy3RwXkRAGcR2CnTPaFLAIhIRV860G3JeREAZtXZncMxoUsAiEhEdKKuidF5EQBm1dmdwzGhSwCISEXzDk6d8XkRAGWf8OPLNaFLAIhIRcA+eIHpeREAZZ\\/w48s1oUsAiEhGEvaSQel5EQBnEdgp0z2hSwCISEYZ0mhd9XkRAGcR2CnTPaFLAIhIRzaa4gnVeREAZxHYKdM9oUsAiEhHSN9eyd15EQBmnMCH91mhSwCISEQN49iZtXkRAGe\\/uT3vVaFLAIhIRP4ztrW9eREAZ7+5Pe9VoUsAiEhEnJ\\/79cF5EQBkaksMA2mhSwCISEZHM+I1wXkRAGQtn8n7YaFLAIhIRWmnYGXteREAZGpLDANpoUsAiEhElLeKSeF5EQBkaksMA2mhSwCISEcY1mUOKXkRAGRqSwwDaaFLAIhIRmH+es4peREAZ1LGUgttoUsAiEhEXIMSOg15EQBk7xmUE3WhSwCISEXZB0t6EXkRAGXC\\/2InhaFLAIhIRF1C4fIleREAZCc0HCOBoUsAiEhFhlLMMiV5EQBlMzzaG3mhSwCISETcFooqOXkRAGQnNBwjgaFLAIhIReZim+o5eREAZcL\\/YieFoUsAiEhFzlmWIkF5EQBnv7k971WhSwCISEcJ1IVSZXkRAGc3l2\\/XQaFLAIhIRyQANOaJeREAZ7+5Pe9VoUsAiEhEbTkcmlV5EQBnjoX7502hSwCISEURgTZaVXkRAGe\\/uT3vVaFLAIhIR1fBAHZheREAZ7+5Pe9VoUsAiEhEUhF4knl5EQBlwv9iJ4WhSwCISEbj6YpSeXkRAGYSmqQvjaFLAIhIReTVWG6FeREAZhKapC+NoUsAiEhEDev0mqF5EQBkLZ\\/J+2GhSwCISEe\\/30ruvXkRAGQtn8n7YaFLAIhIRX4cOTq1eREAZcL\\/YieFoUsAiEhEldOh7sV5EQBlMzzaG3mhSwCISEcfZsQe8XkRAGQnNBwjgaFLAIhIR\\/PKSPr1eREAZ1LGUgttoUsAiEhFDtJcyr15EQBln\\/DjyzWhSwCISEZyZkMKuXkRAGbV2Z3DMaFLAIhIRt7qPKbJeREAZxHYKdM9oUsAiEhF6YIcgtV5EQBnN5dv10GhSwCISEbEtY1e2XkRAGbV2Z3DMaFLAIhIRG8FE\\/rdeREAZVknEbMloUsAiEhF3W1R3tV5EQBlWScRsyWhSwCISEZFnY4mvXkRAGabuIGnGaFLAIhIRtM9El7ReREAZpu4gacZoUsAiEhEBIS2utl5EQBlQME\\/nxGhSwCISES4iLEezXkRAGaqRq+PBaFLAIhIRHZM7wLBeREAZqpGr48FoUsAiEhEnX3ICrV5EQBmm7iBpxmhSwCISEb3viOuqXkRAGaih8urHaFLAIhIRlZKQW6teREAZVknEbMloUsAiEhHBXK1Npl5EQBlWScRsyWhSwCISEUrLtL2mXkRAGa\\/lle7KaFLAIhIRFBMfhpJeREAZr+WV7spoUsAiEhEANxCmkV5EQBmoofLqx2hSwCISEVf2+7yTXkRAGabuIGnGaFLAIhIRDjHvQ5ZeREAZpu4gacZoUsAiEhHVMt9jlV5EQBmoZn1lw2hSwCISESNJ59OVXkRAGVAwT+fEaFLAIhIRCv7r3JJeREAZqGZ9ZcNoUsAiEhEc5ed1j15EQBlasdlhwGhSwCISETZM2\\/yRXkRAGVqx2WHAaFLAIhIRJe7W85ReREAZqpGr48FoUsAiEhG5ccEKl15EQBlasdlhwGhSwCISEVC2phicXkRAGVqx2WHAaFLAIhIRRDKviJxeREAZqpGr48FoUsAiEhHWf7f4nF5EQBmoZn1lw2hSwCISEUMEmZ+eXkRAGVqx2WHAaFLAIhIRR3uHv51eREAZvs41Xr1oUsAiEhETi3lGoF5EQBm+zjVevWhSwCISETZxfk+dXkRAGXHMY9y7aFLAIhIRJSyMyJpeREAZccxj3LtoUsAiEhElLIzIml5EQBlxzGPcu2hSwCISEVJ8kNGXXkRAGdK+kVq6aFLAIhIRwYirIZleREAZtcUH4L5oUsAiEhHKCb2jk15EQBm+zjVevWhSwCISEZVJ3wWPXkRAGbXFB+C+aFLAIhIRq3\\/WlY5eREAZvs41Xr1oUsAiEhHY4MkckV5EQBm+zjVevWhSwCISEZblwKyQXkRAGXHMY9y7aFLAIhIRX4fNJY5eREAZccxj3LtoUsAiEhH43qrDkl5EQBnSvpFaumhSwCISEVP5prqVXkRAGXHMY9y7aFLAIhIRwsmdSpVeREAZ0r6RWrpoUsAiEhHsY67Mj15EQBngpb\\/YuGhSwCISEaELu0WNXkRAGeClv9i4aFLAIhIRqjt3ipNeREAZFBdJU7RoUsAiEhEYekoWnl5EQBkBUhvVtWhSwCISERt5WI+bXkRAGQFSG9W1aFLAIhIRYAxGDaFeREAZmoHtVrdoUsAiEhF0gkjSql5EQBm1xQfgvmhSwCISEYi7+6+tXkRAGZqB7Va3aFLAIhIRM+PxP61eREAZAVIb1bVoUsBasQEIqwMVRCCVQxl2jvPb1xXaEiIjNzU0ZjE1MTFhMWFhNDFiMmI3Nzc5NDRiMjgwMTIxMGMuMTYqdWh0dHA6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL1FPa2pvUTVSS0otMFJYWVdBQWxFWTJDVVNaY040UzZtbVd4Sm9WMm1KS2E4M1VqV2tDa1lhQWwyVUFLV1psRVJIQ1Fac1BpSXZQcWxxM1kyS1U4WTICEAJasQEItwIVRCCVQxkRmLVsbbBTaiIjNzU0ZjE1MTFhMWFhNDFiMmI3Nzc5NDRiMjgwMTIxMGMuMTYqdWh0dHA6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL1FPa2pvUTVSS0otMFJYWVdBQWxFWTJDVVNaY040UzZtbVd4Sm9WMm1KS2E4M1VqV2tDa1lhQWwyVUFLV1psRVJIQ1Fac1BpSXZQcWxxM1kyS1U4WTICEAFasQEItAMVRCCVQxmmDYmCIIv5mSIjNzU0ZjE1MTFhMWFhNDFiMmI3Nzc5NDRiMjgwMTIxMGMuMTYqdWh0dHA6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL1FPa2pvUTVSS0otMFJYWVdBQWxFWTJDVVNaY040UzZtbVd4Sm9WMm1KS2E4M1VqV2tDa1lhQWwyVUFLV1psRVJIQ1Fac1BpSXZQcWxxM1kyS1U4WTICEAMKrBIIgICAgIyrn+GJARCHlI\\/OgS0aQgojMzBmZDU5MzFmYzUwNGI3ZGIwY2IwYWU1M2FiYzAxYzkuMTYQ9OaxiPUsGVPL1voiX0RAIV4SZ0XUaFLAQAFIARrxAQojMzc4MTM5ZWYwYzZlNGUxMWIzODMzYmU0OWU5N2ExN2IuMTYQ27XHzYEtGaJhMepaX0RAIbM\\/UG7baFLAKAEw0ANAAZIBAhABmAEBogEiCIiYuu3eofC2rwEQ55XHzYEtGOfyos+BLSDH2MfQgS0wAqoBCBDDXCjr66UvuAGmiJLCgS3KAWlodHRwOi8vbGgzLmdncGh0LmNvbS9NcVJuTTdKOGVKUEgtZHdKSXYyV1BTUTR5Zm1TWnA3a3MzZnkzT043SXZpa1MyMWFuY0gyRVBwV1c5ZExDTTV4V1Y2ektPUXJaTmdhbXVJNVp2TUUaQgojNjIwZWY0Yjk1YWM3NDBjN2ExODA3MzkzOWE5YTFlYjguMTYQqOvCsIAtGd+Hg4QoX0RAIcxh9x3DaFLAQAFIARpCCiNhNzEzYzdiYTRkZWM0NjEzYTY0YjBiYWI3NmVhYzIzMi4xNhCj+O2S\\/CwZfPDapQ1fREAhCMvY0M1oUsBAAUgBIhIRRAY+9FZfREAZGpLDANpoUsAiEhFC2aloTF9EQBkLZ\\/J+2GhSwCISER12fQ1XX0RAGYSmqQvjaFLAIhIRR33u8UxfREAZhKapC+NoUsAiEhF5MgprSl9EQBmEpqkL42hSwCISESX0QF1FX0RAGYSmqQvjaFLAIhIRoQBc1kJfREAZhKapC+NoUsAiEhGl1KtBO19EQBmEpqkL42hSwCISEcs\\/jFg9X0RAGXC\\/2InhaFLAIhIRPmRR9kFfREAZCc0HCOBoUsAiEhEC9iqdQ19EQBk7xmUE3WhSwCISEfaduAFJX0RAGe\\/uT3vVaFLAIhIRq7mxkUhfREAZ46F++dNoUsAiEhF2f\\/2MQF9EQBmCSa130mhSwCISEUSJBP1AX0RAGeOhfvnTaFLAIhIRx4sm5j5fREAZ7+5Pe9VoUsAiEhHKXU74OF9EQBmCSa130mhSwCISEbBEOKg3X0RAGWf8OPLNaFLAIhIRD9\\/ao0JfREAZzeXb9dBoUsAiEhEf0re6RF9EQBnEdgp0z2hSwCISEec20jhdX0RAGe\\/uT3vVaFLAIhIR9DrLyFxfREAZ46F++dNoUsAiEhHLMLV4W19EQBnEdgp0z2hSwCISERqm4IpVX0RAGbV2Z3DMaFLAIhIRs9JGCj9fREAZccxj3LtoUsAiEhFk2AYxMV9EQBlasdlhwGhSwCISEddofIFFX0RAGVZJxGzJaFLAIhIRL9BEajBfREAZpu4gacZoUsAiEhGu+17jLV9EQBmm7iBpxmhSwCISES4Pm0UpX0RAGaih8urHaFLAIhIR6ZCJPCxfREAZVknEbMloUsAiEhFNd8XHI19EQBmm7iBpxmhSwCISEZrWzTckX0RAGaih8urHaFLAIhIRnem8VyNfREAZUDBP58RoUsAiEhFlSLuAH19EQBlasdlhwGhSwCISET4qogciX0RAGVqx2WHAaFLAIhIRYH5VnClfREAZWrHZYcBoUsAiEhEYoF4MKl9EQBmqkavjwWhSwCISEbQzPPovX0RAGVAwT+fEaFLAIhIR1mgzii9fREAZqGZ9ZcNoUsAiEhHw8Rc6Ll9EQBm1xQfgvmhSwCISEYdtDsotX0RAGb7ONV69aFLAIhIRSRVFQgVfREAZFBdJU7RoUsAiEhGdg0+yBV9EQBkBUhvVtWhSwCISEYjN\\/lIbX0RAGahmfWXDaFLAIhIRiwUQMxxfREAZpu4gacZoUsAiEhFdwYD3El9EQBlWScRsyWhSwCISESmleIcSX0RAGaih8urHaFLAIhIRoZamJxVfREAZzeXb9dBoUsAiEhHSRvMCDl9EQBmCSa130mhSwCISERm76WkRX0RAGe\\/uT3vVaFLAIhIRQojS8BNfREAZ7+5Pe9VoUsAiEhGInK2XFV9EQBmCSa130mhSwCISEYWKcwweX0RAGe\\/uT3vVaFLAIhIRfz5bkyBfREAZ7+5Pe9VoUsAiEhHxSDDzHV9EQBm1dmdwzGhSwCISEfeD7fclX0RAGWf8OPLNaFLAIhIR+iehjC1fREAZZ\\/w48s1oUsAiEhF1bv4eK19EQBmnMCH91mhSwCISEXiYF5goX0RAGacwIf3WaFLAIhIR755P+iNfREAZC2fyfthoUsAiEhFh7EjRJ19EQBk7xmUE3WhSwCISEXzSBI8rX0RAGQtn8n7YaFLAIhIRRIn0PDNfREAZcL\\/YieFoUsAiEhHvrmwqJl9EQBkJzQcI4GhSwCISEVO0x54bX0RAGUzPNobeaFLAIhIRg0J0UyJfREAZ1LGUgttoUsAiEhFUquSHGV9EQBkJzQcI4GhSwFq1AQjTAhVxt9hDGdmiozgEEjqDIiM2MjBlZjRiOTVhYzc0MGM3YTE4MDczOTM5YTlhMWViOC4xNip3aHR0cDovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vaTFIa2JwVjVxOElqRllqU1VBR04yUUFSNGZQTmFYX18xR29PdG9Ec1ZSX2tpem9Hb3BYSi05d3JKbmNtaUpUcTU2c29VSE9VbUZZWjBPMWpWeW5jcHcyBBABKAFapQEIjwMVe1nLQxk6SLdNMi2YGCIjYTcxM2M3YmE0ZGVjNDYxM2E2NGIwYmFiNzZlYWMyMzIuMTYqaWh0dHA6Ly9saDQuZ2dwaHQuY29tL3A2bEJpQnE5dk5vaWlQV3hxRWhEQ0g5cDdXUFBiQlBFMGtmTXAyamh4SklZZm5NQ1F1SkV0TXdFaW00aFU1Smo1T0YzYkFMZVBiczZNR1ZSamxxXzICEAFapwEI0wIVe1nLQxkhbtbpBOfEoSIjYTcxM2M3YmE0ZGVjNDYxM2E2NGIwYmFiNzZlYWMyMzIuMTYqaWh0dHA6Ly9saDQuZ2dwaHQuY29tL3A2bEJpQnE5dk5vaWlQV3hxRWhEQ0g5cDdXUFBiQlBFMGtmTXAyamh4SklZZm5NQ1F1SkV0TXdFaW00aFU1Smo1T0YzYkFMZVBiczZNR1ZSamxxXzIEEAEoAQqOCAiAgICAlKuf4YkBEIeUj86BLSISEVGLiEcIX0RAGXC\\/2InhaFLAIhIR7rpAJQtfREAZGpLDANpoUsAiEhH1A1eeCF9EQBkaksMA2mhSwCISEUiKkpkAX0RAGQtn8n7YaFLAIhIRuPWtgv5eREAZGpLDANpoUsAiEhFHlc7b\\/F5EQBk7xmUE3WhSwCISEZXgvtL\\/XkRAGUzPNobeaFLAIhIRX4GpWQJfREAZTM82ht5oUsAiEhEuN8299F5EQBmCSa130mhSwCISETro0y31XkRAGeOhfvnTaFLAIhIRN3vopvJeREAZ46F++dNoUsAiEhE9TPWG815EQBmnMCH91mhSwCISEcXiJBLrXkRAGeOhfvnTaFLAIhIRfPgQme1eREAZ46F++dNoUsAiEhFRUAop7V5EQBmCSa130mhSwCISESufIPUIX0RAGYJJrXfSaFLAIhIRHQ8KfAtfREAZgkmtd9JoUsAiEhEQqBmFCF9EQBnN5dv10GhSwCISEWaPIR4FX0RAGWf8OPLNaFLAIhIRGhAargRfREAZtXZncMxoUsAiEhG0LgulB19EQBln\\/DjyzWhSwCISEcSV9CsKX0RAGWf8OPLNaFLAIhIRrHFMOfxeREAZVknEbMloUsAiEhEihGYrA19EQBkBUhvVtWhSwCISEcIYXLsCX0RAGRQXSVO0aFLAIhIRAeRyNABfREAZFBdJU7RoUsAiEhFkaLQG\\/F5EQBmage1Wt2hSwCISEYkTno3+XkRAGZqB7Va3aFLAIhIRHm6+dvxeREAZ4KW\\/2LhoUsAiEhEDhcp\\/+V5EQBmage1Wt2hSwCISEVT0tZ\\/4XkRAGRQXSVO0aFLAIhIR8IATwvVeREAZccxj3LtoUsAiEhGprLi82l5EQBkBUhvVtWhSwCISEaDR8SfTXkRAGQFSG9W1aFLAIhIRX9b7l9NeREAZmoHtVrdoUsAiEhGBU7zLt15EQBmage1Wt2hSwCISEbaQz6u4XkRAGdK+kVq6aFLAIhIRpBDr+7leREAZtcUH4L5oUsAiEhGglwxVuF5EQBmqkavjwWhSwCISEdU85GXOXkRAGc3l2\\/XQaFLAIhIRa1vd9c1eREAZxHYKdM9oUsAiEhHonAnxxV5EQBln\\/DjyzWhSwCISEel+vZzPXkRAGbV2Z3DMaFLAIhIRKLirI9JeREAZtXZncMxoUsAiEhH7EboD015EQBnEdgp0z2hSwCISEWt0l93nXkRAGYSmqQvjaFLAIhIRK2CqVuVeREAZhKapC+NoUsAiEhGS9TbYzF5EQBk7xmUE3WhSwCISEdW6R1HKXkRAGTvGZQTdaFLAIhIRolxzTMJeREAZ1LGUgttoUsAiEhE4uXi8wl5EQBk7xmUE3WhSwAreGAiAgICAnKuf4YkBEIeUj86BLRpCCiM1NGU3MWQ3NjMxYWI0YjJjOWE0MWRhYzE2Y2EzM2Y2Yy4xNhCkxY+fgS0ZV89J7xtfREAhwK+RJAhpUsBAAUgBGkIKIzk1ZTYyZmMyZjc0ZDQ0MjQ4ZWI1ZWYwYzRiYjI3NDBkLjE2EPCJmqaBLRnpt68D515EQCEFbAcj9mhSwEABSAEaQgojYjk3N2QxMjcwNzg5NGFkODkxNWI0N2Y2MjQzMzY2ZjcuMTYQ2tSEuv8sGT0pkxraXkRAIYBFfv0QaVLAQAFIARprCiNlMzMzMjY5Y2I4YWM0OTgwOWZmODhkMzBlYTkwMmM1YS4xMRCjmfLNgS0ZnOCbps9eREAhHGDmO\\/hoUsAoAjChAkABkgECEAKYAQGqARMQ5CoZAAAAADOH6z8gAyiGvfYBuAHj5rjMgS0iEhGezEcm115EQBkrRy8a72hSwCISEeWEYe\\/VXkRAGW2ooJ\\/zaFLAIhIRcYA8jdpeREAZAj7QHfJoUsAiEhHJGCik3F5EQBlByP+b8GhSwCISEfe3DALjXkRAGYIHcSH1aFLAIhIRNcAthN1eREAZbaign\\/NoUsAiEhFumPqI5V5EQBmCB3Eh9WhSwCISEWsB+BjlXkRAGW2ooJ\\/zaFLAIhIRUXGwfepeREAZACOOFuxoUsAiEhEfu6wN6l5EQBnqf72U6mhSwCISEZhEE7veXkRAGStHLxrvaFLAIhIRWp0a5NpeREAZ6n+9lOpoUsAiEhGQ2Qhr3V5EQBnqf72U6mhSwCISEaD\\/AIvcXkRAGcAXHJHnaFLAIhIRicoWdNpeREAZf9HsEuloUsAiEhEobPiq215EQBlCgnqN5GhSwCISEWW+lSTsXkRAGX\\/R7BLpaFLAIhIR0ONOIPdeREAZACOOFuxoUsAiEhHlaBre+l5EQBnAFxyR52hSwCISEdgSFm76XkRAGaxSSw\\/maFLAIhIR\\/bfKaQVfREAZf9HsEuloUsAiEhFCNbXwB19EQBl\\/0ewS6WhSwCISEXHY58IDX0RAGQAjjhbsaFLAIhIRk9COBRNfREAZggdxIfVoUsAiEhFY5KR+EF9EQBmCB3Eh9WhSwCISEdPrqV4RX0RAGa6jESX4aFLAIhIRRn+n7hBfREAZQ1tBo\\/ZoUsAiEhF2bpF1E19EQBlDW0Gj9mhSwCISEWjOK6UCX0RAGcTg4ab5aFLAIhIRqE9AHgBfREAZxODhpvloUsAiEhEsclIn\\/V5EQBmuoxEl+GhSwCISEfwzZDD6XkRAGUNbQaP2aFLAIhIRNEcnxQFfREAZQ1tBo\\/ZoUsAiEhGOsDPu\\/V5EQBkCPtAd8mhSwCISEQiaTUf8XkRAGYIHcSH1aFLAIhIRrrNhwPleREAZggdxIfVoUsAiEhHEBm3p9V5EQBlByP+b8GhSwCISEVu+g9LzXkRAGQI+0B3yaFLAIhIRagmau\\/FeREAZbaign\\/NoUsAiEhE5r5wr8l5EQBmCB3Eh9WhSwCISEXESeKn3XkRAGUNbQaP2aFLAIhIRZ2F6GfheREAZrqMRJfhoUsAiEhEpSb208l5EQBnCYyKu\\/2hSwCISEfJ4viTzXkRAGSto8i8BaVLAIhIRd49yIP5eREAZ+06SMwRpUsAiEhHiNjeVBl9EQBl0CDI3B2lSwCISEennxScQX0RAGe44gqr8aFLAIhIRKcybpRVfREAZA1RSLP5oUsAiEhG\\/U50VFl9EQBnCYyKu\\/2hSwCISETYyuL4VX0RAGXQIMjcHaVLAIhIRgJW3ThVfREAZYjFitQVpUsAiEhF+UM3HEl9EQBliMWK1BWlSwCISET\\/qzTcTX0RAGXQIMjcHaVLAIhIRgCsjbApfREAZpEmhvAtpUsAiEhHk\\/yLcCl9EQBlc83A+DWlSwCISEX7guJ4WX0RAGZWU0ToKaVLAIhIRDvK4DhdfREAZpEmhvAtpUsAiEhGJyvapEV9EQBnhKK9FE2lSwCISEZta+MkQX0RAGcskEEIQaVLAIhIRmd0N0w1fREAZwJFAwA5pUsAiEhGggSCcDF9EQBnhKK9FE2lSwCISEdAINRUKX0RAGeEor0UTaVLAIhIR7T1yEAJfREAZgqzfwxFpUsAiEhF9XF6XBF9EQBmCrN\\/DEWlSwCISEfU1N8UIX0RAGcCRQMAOaVLAIhIRZ1ObYvpeREAZL9QBuQhpUsAiEhFlqK67+F5EQBmkSaG8C2lSwCISEaM8GsLrXkRAGeEor0UTaVLAIhIRxqxPveNeREAZgqzfwxFpUsAiEhFr5ECE5F5EQBmkSaG8C2lSwCISEWOIL5vmXkRAGZWU0ToKaVLAIhIRg8odIuleREAZlZTROgppUsAiEhHSvx2y6F5EQBkv1AG5CGlSwCISEayzCxnsXkRAGaRJobwLaVLAIhIRkGQLiexeREAZXPNwPg1pUsAiEhEiPPkP715EQBlc83A+DWlSwCISEbeKC8nqXkRAGXQIMjcHaVLAIhIRLIP3\\/+teREAZPmHCsQJpUsAiEhHNDeWG7l5EQBk+YcKxAmlSwCISEew00C3wXkRAGcJjIq7\\/aFLAIhIRt9nOve9eREAZA1RSLP5oUsAiEhE2hCuL415EQBnCYyKu\\/2hSwCISEU\\/FS53dXkRAGe44gqr8aFLAIhIRMDpNDd5eREAZA1RSLP5oUsAiEhGFglBd315EQBk+YcKxAmlSwCISEd49Uc3fXkRAGftOkjMEaVLAIhIRSR8d0udeREAZYjFitQVpUsAiEhFqKVKt4F5EQBl0CDI3B2lSwCISEZ7xlCHWXkRAGWIxYrUFaVLAIhIRL\\/iDONheREAZ+06SMwRpUsAiEhF9cJSx1V5EQBn7TpIzBGlSwCISEeBeYkbdXkRAGftOkjMEaVLAIhIRHfVcFtteREAZ7jiCqvxoUsAiEhGu7G2P2F5EQBnuOIKq\\/GhSwCISEaVbb\\/\\/YXkRAGQNUUiz+aFLAIhIRBBiAeNZeREAZA1RSLP5oUsAiEhEErH4I1l5EQBnuOIKq\\/GhSwCISEaJVgejWXkRAGcJjIq7\\/aFLAIhIR3mSCWNdeREAZK2jyLwFpUsAiEhEX45LR1F5EQBkraPIvAWlSwCISEW2AtYPRXkRAGXQIMjcHaVLAIhIRG0rF\\/M5eREAZdAgyNwdpUsAiEhGYZcVsz15EQBkv1AG5CGlSwCISEe+SperUXkRAGZWU0ToKaVLAIhIRtF6VcddeREAZlZTROgppUsAiEhHKZpMx2V5EQBnLJBBCEGlSwCISEUxtcj\\/eXkRAGcskEEIQaVLAIhIRSYFxr95eREAZgqzfwxFpUsAiEhG2m1+m4V5EQBnhKK9FE2lSwCISEYtUkRHaXkRAGeEor0UTaVLAIhIRBHehitdeREAZ4SivRRNpUsAiEhGyVaQ61l5EQBnAkUDADmlSwCISEdBItLPTXkRAGcCRQMAOaVLAIhIRdTzCDNJeREAZgqzfwxFpUsAiEhFEE8F80l5EQBnhKK9FE2lSwCISEQmN0PXPXkRAGeEor0UTaVLAWrABCOsCFVvhBkQZw9kwJEmSGcciIzk1ZTYyZmMyZjc0ZDQ0MjQ4ZWI1ZWYwYzRiYjI3NDBkLjE2KnRodHRwOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9aeWxsSDlXVmx0RlpueXg5eDdjWEdRTExDb2xRUkdkWHl2U0daZmhtbVUtMDR6ejc4THdkNHM4OExVTXNSWWlYOXVnMzN2U0M0QlAyMGJUTFF5TTICEAFapgEI\\/wEV+QcnRBnrqDzmu2auOCIjYjk3N2QxMjcwNzg5NGFkODkxNWI0N2Y2MjQzMzY2ZjcuMTYqaGh0dHA6Ly9saDYuZ2dwaHQuY29tL2F0V0w0SkQ1MnFUdElETVlEN2t1TTFBSi1MZXMxcmxOeFJlSUt5b2M4SkhIUWF6WEIwZnBnRWZNM01tdFJfeExtLWh1WEl6THRRR3J2TnJGU3VBMgQQASgBWqQBCI8DFfkHJ0QZphsdK8eBkzIiI2I5NzdkMTI3MDc4OTRhZDg5MTViNDdmNjI0MzM2NmY3LjE2KmhodHRwOi8vbGg2LmdncGh0LmNvbS9hdFdMNEpENTJxVHRJRE1ZRDdrdU0xQUotTGVzMXJsTnhSZUlLeW9jOEpISFFhelhCMGZwZ0VmTTNNbXRSX3hMbS1odVhJekx0UUdydk5yRlN1QTICEAEKgQ4IgICAgOSrn+GJARCHlI\\/OgS0iEhHnAzsBm15EQBk\\/ElzpXGhSwCISEdUjKoidXkRAGT8SXOlcaFLAIhIRcIAzbaZeREAZtFLabmFoUsAiEhH52rIduF5EQBm0UtpuYWhSwCISET9dE2mxXkRAGXCag3JkaFLAIhIRuF8VV7deREAZ6rQsdmdoUsAiEhEItnipwl5EQBk6\\/K7wYmhSwCISEXOdjCLAXkRAGTr8rvBiaFLAIhIRkQ5kQr9eREAZ3Z0F7V9oUsAiEhGKjqZIvl5EQBnaX17eU2hSwCISEZlSv4LQXkRAGbbdMGteaFLAIhIRdIKqEtBeREAZPxJc6VxoUsAiEhH7ff5\\/0l5EQBnaX17eU2hSwCISEQ\\/mJsXMXkRAGTr8rvBiaFLAIhIRp\\/s7UMReREAZ3Z0F7V9oUsAiEhF82Vrhyl5EQBlWkneIdmhSwCISEZjCCP3UXkRAGVaSd4h2aFLAIhIRIfO2IdxeREAZ63ujBnVoUsAiEhGDXeeK6V5EQBkUsVL\\/bmhSwCISEaylcK3mXkRAGVaSd4h2aFLAIhIRVt27duVeREAZsJHzDXtoUsAiEhEDc4Id515EQBlwnUsKeGhSwCISEdK9JjnxXkRAGXCdSwp4aFLAIhIR0r0mOfFeREAZcJ1LCnhoUsAiEhHBIGGS715EQBmwkfMNe2hSwCISEX6Ig3LwXkRAGapYmxF+aFLAIhIRw+3SROxeREAZXvJCFYFoUsAiEhGh2hWw5F5EQBle8kIVgWhSwCISEeA4PJniXkRAGT6uFpeCaFLAIhIRzY1fLddeREAZqlibEX5oUsAiEhGDpNoB3V5EQBlwnUsKeGhSwCISEXS0AevaXkRAGTmdH4x5aFLAIhIR9FxjNtReREAZ1nrHj3xoUsAiEhHy8nev0V5EQBnWesePfGhSwCISESzZaUjOXkRAGTmdH4x5aFLAIhIRoAR+wcteREAZOZ0fjHloUsAiEhF1abERzV5EQBmqWJsRfmhSwCISEdq2mY\\/SXkRAGS4rb5N\\/aFLAIhIRH8aVhtVeREAZXvJCFYFoUsAiEhErqeZqy15EQBle8kIVgWhSwCISEa0V1vrKXkRAGS4rb5N\\/aFLAIhIRbsH\\/9cJeREAZqlibEX5oUsAiEhFtehBmw15EQBkuK2+Tf2hSwCISEQkFIdbDXkRAGV7yQhWBaFLAIhIRCQUh1sNeREAZXvJCFYFoUsAiEhF+KB7Nxl5EQBk+rhaXgmhSwCISEcphRL\\/BXkRAGT6uFpeCaFLAIhIRu5VK2rheREAZqlibEX5oUsAiEhG5fMqcxF5EQBmwkfMNe2hSwCISEev8tiPHXkRAGbCR8w17aFLAIhIRmhjIk8deREAZ1nrHj3xoUsAiEhFvfIDKyF5EQBlwnUsKeGhSwCISEW\\/6XOrHXkRAGet7owZ1aFLAIhIRi5OC08VeREAZVpJ3iHZoUsAiEhHc80p6x15EQBkvWs+Ec2hSwCISEeW+OArHXkRAGSEt+wJyaFLAIhIR5b44CsdeREAZIS37AnJoUsAiEhFmIDwuu15EQBnCB6r7a2hSwCISEbdchwC3XkRAGRSxUv9uaFLAIhIR6WTPt7teREAZVpJ3iHZoUsAiEhGcshicsV5EQBlWkneIdmhSwCISEbY0vH2pXkRAGcIHqvtraFLAIhIRk3UFR6heREAZw\\/QmgXBoUsAiEhGXnxbApV5EQBnD9CaBcGhSwCISEczGKSepXkRAGS9az4RzaFLAIhIRRf2zwqNeREAZsJHzDXtoUsAiEhF878QypF5EQBnWesePfGhSwCISEdxUgWCoXkRAGTmdH4x5aFLAIhIR8v9v8KdeREAZcJ1LCnhoUsAiEhG+5F53ql5EQBlwnUsKeGhSwCISEd6SXmWwXkRAGbCR8w17aFLAIhIRzgqRtbFeREAZLitvk39oUsAiEhHOCpG1sV5EQBkuK2+Tf2hSwCISEYtmgEWxXkRAGapYmxF+aFLAIhIRSz20sKleREAZqlibEX5oUsBaEAjrAhmZ8zAGQNp2SjICEAJaEgj\\/ARmbJ3Q\\/cIgKMDIEEAIoAVoQCLwCGfqi0NTwi7b4MgIQAloPCFoZk1zFq+rFA1cyAhABWhII\\/wEZxqB1TpY\\/d+cyBBABKAFaswEI0wIVT5AYQxkPvd+rRTBxciIjNGJjMDRlOGNlYmQ1NDg3MmE3ODU5NGMzMTcwOTQ1MjYuMTYqdWh0dHA6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL1pkRk5UZU5fZlpMaGhHWU9TTmdLNGZ4MmhCejIwMXFlVVFuN0pLTENEUHFjY041dXhPM2NlY1ludGJ2WVdtdDBZTmdKX1BQZ2dHaEVfQ1RUWU5fQTIEEAEoAQr+EgiAgICA7Kuf4YkBEIeUj86BLRpCCiM3OTkyMDBmMmRjMDY0YjQxOTA4MDI1MGFjYjU4Mzc1OS4xNhDEpKW3\\/CwZ9iUbD7ZeREAhQiECDqFoUsBAAUgBGm4KI2YxYjgzZTRlMmM4NzQwZjE4ZmE5OWYzN2QxNzg5ODkxLjE2EP3q+8mBLRmqKjQQy15EQCEKvJNPj2hSwCgCMNMDQAGSAQIQApgBAaoBExDwEBkAAACA3FPmPyAFKPzykwS4AaTMncqBLfgBASISEc\\/yFmOmXkRAGc1e6hiEaFLAIhIRoT4WWqleREAZCQS+moVoUsAiEhHTriTBrF5EQBmNLGWeiGhSwCISET18NkOnXkRAGfSdkRyHaFLAIhIR7sREqqpeREAZ1a84IIpoUsAiEhH13RE\\/sl5EQBnVrzggimhSwCISESeJZJ\\/CXkRAGQkEvpqFaFLAIhIRs1s+rcdeREAZCQS+moVoUsAiEhFC6xrEyV5EQBnNXuoYhGhSwCISEcdCh9TMXkRAGcD1sqWOaFLAIhIRZHPESMJeREAZbpTfI41oUsAiEhHZMek6vV5EQBlulN8jjWhSwCISEZ8TDXnEXkRAGdEJAK2UaFLAIhIR2276\\/8ZeREAZ0QkArZRoUsAiEhHbkeeGyV5EQBnRCQCtlGhSwCISEZ+bnZa5XkRAGcBoTLSaaFLAIhIR1GNjzbpeREAZiDLTLpZoUsAiEhHjJHE9u15EQBntT6awl2hSwCISEXhRmkGwXkRAGdEJAK2UaFLAIhIRRBZt6LFeREAZbJZZqZFoUsAiEhFMv5DjqV5EQBm+S4YnkGhSwCISEQ2PxpquXkRAGe1PprCXaFLAIhIRPpDzSLZeREAZhxKYu6BoUsAiEhGRzqoGul5EQBktZB82nGhSwCISEcJRmY28XkRAGS1kHzacaFLAIhIRuJyHFL9eREAZLWQfNpxoUsAiEhEXUdFWu15EQBmHEpi7oGhSwCISEUypxOa6XkRAGRE5xTmfaFLAIhIRyIziz7heREAZhxKYu6BoUsAiEhGDFeo2vF5EQBl6oz2\\/o2hSwCISEX7K3ca7XkRAGargaj2iaFLAIhIRUbjwnb9eREAZJAfjwqZoUsAiEhFBBzWCtV5EQBkkB+PCpmhSwCISEeMhKRK1XkRAGflaEEGlaFLAIhIRugMAubZeREAZquBqPaJoUsAiEhEiDh2itF5EQBl6oz2\\/o2hSwCISEWmORfuyXkRAGSQH48KmaFLAIhIREshc27NeREAZgj2IxqloUsAiEhFuQlFrs15EQBn8p7VEqGhSwCISEYvqRlm5XkRAGbTHWkiraFLAIhIRy4KOpLJeREAZIbr\\/S65oUsAiEhG+GV05ul5EQBkhuv9LrmhSwCISEe0wTMC8XkRAGSG6\\/0uuaFLAIhIRlw8IfsBeREAZgj2IxqloUsAiEhF9ltrgzl5EQBlbItLNr2hSwCISEc+0k57SXkRAGbTHWkiraFLAIhIRln+PN89eREAZ\\/Ke1RKhoUsAiEhEKNn5gy15EQBl6oz2\\/o2hSwCISEQIwinLFXkRAGYcSmLugaFLAIhIROCxRqcZeREAZLWQfNpxoUsAiEhGWP14Zx15EQBlIVPK3nWhSwCISETOiEjXRXkRAGUhU8redaFLAIhIRykYeA9heREAZeqM9v6NoUsAiEhGCFhJY4V5EQBmCPYjGqWhSwCISEeJef2\\/2XkRAGZRGLcqsaFLAIhIRrVPBqPVeREAZ1NB20bJoUsAiEhFoZqsv+F5EQBnU0HbRsmhSwCISERqqoL\\/3XkRAGUF\\/pE+xaFLAIhIR9Xd0ZvleREAZIbr\\/S65oUsAiEhFYEV7t+15EQBkhuv9LrmhSwCISEVcwaV38XkRAGVsi0s2vaFLAIhIR8iB0zfxeREAZQX+kT7FoUsAiEhEFiF1U\\/15EQBlBf6RPsWhSwCISETRNaMT\\/XkRAGdTQdtGyaFLAIhIRAH9RSwJfREAZ1NB20bJoUsAiEhFwxhkbAF9EQBm0x1pIq2hSwCISEb20XYb4XkRAGbTHWkiraFLAIhIRNEhHDfteREAZtMdaSKtoUsAiEhEOnjud+l5EQBmCPYjGqWhSwCISEeo3Ajv\\/XkRAGfyntUSoaFLAIhIRFCv2yv5eREAZJAfjwqZoUsAiEhEKcvRj+15EQBl6oz2\\/o2hSwCISEd4nxAr9XkRAGYcSmLugaFLAIhIRv1yVju5eREAZbJZZqZFoUsAiEhHEBdDw6V5EQBnI1Swrk2hSwCISEdFtM6PmXkRAGf9heTKZaFLAIhIRZmjze+FeREAZvkuGJ5BoUsAiEhH5F94C5F5EQBm+S4YnkGhSwCISEV2UoULiXkRAGdWvOCCKaFLAIhIRNcctidNeREAZyicMootoUsAiEhFSqfov1V5EQBmNLGWeiGhSwCISEX\\/\\/kdLhXkRAGY0sZZ6IaFLAIhIRP4pMCeNeREAZzV7qGIRoUsAiEhE6rVx5415EQBkJBL6ahWhSwCISEa2xNpDlXkRAGc1e6hiEaFLAIhIRL4EqfuteREAZ9J2RHIdoUsAiEhH88Ele7F5EQBnVrzggimhSwCISEUcnDfzwXkRAGY0sZZ6IaFLAIhIRRycN\\/PBeREAZjSxlnohoUsAiEhHl1yN17l5EQBmNLGWeiGhSwCISEdYFFAXuXkRAGfSdkRyHaFLAIhIRF2DWovJeREAZCQS+moVoUsAqRAnF26d2pE0CsBCHlI\\/OgS0Z4yRxPbteREAh7U+msJdoUsAqCzg5YzI3ZDVlOTliOggQ6wKiAgIQAVj46\\/Cx\\/v\\/\\/\\/\\/8BUjoKCzg5YzI3ZDVlOTliEcXbp3akTQKwGOsCIP\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/wEp4yRxPbteREAx7U+msJdoUsA6AhABWhAI6wIZxdundqRNArAyAhABWqUBCJQCFVEvxUIZSwA2W6yJJ38iIzc5OTIwMGYyZGMwNjRiNDE5MDgwMjUwYWNiNTgzNzU5LjE2KmlodHRwOi8vbGg1LmdncGh0LmNvbS9WXzJrd2VESkYzTmlHLWF2MGpyaXd5dDRiN19UNzkzUWZBOF9aR0gtREw3eEI3MWFUYW5Ed0hsWkNHTmNrWUFld0JPSXFKdnRNZVZ4MHhERUI5MG4yAhABWhII\\/wEZldpRE9lTYz8yBBABKAFaEgi7ARkwZM91MQ6GkzIEEAEoAVoQCIcCGfc67g\\/JpD+eMgIQAVoQCIkCGSni+Fc60JmpMgIQAQqqDAiAgICA9Kuf4YkBEIeUj86BLSISEZwXQ4gOX0RAGcD1sqWOaFLAIhIR0IUBuSNfREAZwGhMtJpoUsAiEhEtUDarHl9EQBnAaEy0mmhSwCISEWA7l8ENX0RAGdEJAK2UaFLAIhIRQ+4zzQhfREAZSFTyt51oUsAiEhH0+FodCl9EQBmq4Go9omhSwCISEZLQig8FX0RAGargaj2iaFLAIhIR8QWv+AJfREAZeqM9v6NoUsAiEhF5dbtoA19EQBn5WhBBpWhSwCISEZ62x9gDX0RAGSQH48KmaFLAIhIRYcnTSARfREAZ\\/Ke1RKhoUsAiEhFY6\\/aYBV9EQBmURi3KrGhSwCISEb1j6ygFX0RAGbTHWkiraFLAIhIRNLECogJfREAZtMdaSKtoUsAiEhFkbw15Bl9EQBlbItLNr2hSwCISEfqzJPIDX0RAGVsi0s2vaFLAIhIRd60vYgRfREAZQX+kT7FoUsAiEhGR8vX\\/CF9EQBlbItLNr2hSwCISESVFiBIWX0RAGUF\\/pE+xaFLAIhIRnXTq\\/R1fREAZgj2IxqloUsAiEhFh9wN3G19EQBmCPYjGqWhSwCISEQDID+cbX0RAGbTHWkiraFLAIhIRF94mxxxfREAZIbr\\/S65oUsAiEhEdpb\\/iJl9EQBkhuv9LrmhSwCISEftKzusjX0RAGZRGLcqsaFLAIhIR5pqckiVfREAZgj2IxqloUsAiEhGhgl3JJl9EQBn5WhBBpWhSwCISEX0sxkYZX0RAGargaj2iaFLAIhIRiPlDGx9fREAZLWQfNpxoUsAiEhFI32trIF9EQBmHEpi7oGhSwCISERXBXvsfX0RAGRE5xTmfaFLAIhIRFjUPKSRfREAZLWQfNpxoUsAiEhGEfvSvJl9EQBktZB82nGhSwCISEWMJo0QuX0RAGS1kHzacaFLAIhIR9yXYBDBfREAZquBqPaJoUsAiEhHW8L4wPV9EQBmURi3KrGhSwCISESMos8A8X0RAGbTHWkiraFLAIhIRVOcGLDVfREAZtMdaSKtoUsAiEhHMqn5nPl9EQBn8p7VEqGhSwCISEQY3KPxFX0RAGfyntUSoaFLAIhIRVGg0bEZfREAZgj2IxqloUsAiEhHdblHlQ19EQBmCPYjGqWhSwCISEdJuXVVEX0RAGbTHWkiraFLAIhIRRc2WRz9fREAZtMdaSKtoUsAiEhHtmKK3P19EQBmURi3KrGhSwCISEX\\/s8+BOX0RAGZRGLcqsaFLAIhIRYlTYwkZfREAZquBqPaJoUsAiEhFV1xuMRV9EQBkkB+PCpmhSwCISEUJJDxxFX0RAGflaEEGlaFLAIhIRrFgslUJfREAZ+VoQQaVoUsAiEhHYL0kOQF9EQBn5WhBBpWhSwCISEUx5PJ4\\/X0RAGXqjPb+jaFLAIhIRt4joy0NfREAZhxKYu6BoUsAiEhHynYLwSl9EQBkROcU5n2hSwCISERIfdYBKX0RAGUhU8redaFLAIhIRbn+jZjdfREAZvkuGJ5BoUsAiEhGE2svGKF9EQBnAaEy0mmhSwCISEUjM5j8mX0RAGcBoTLSaaFLAIhIRDQB4jSlfREAZ0QkArZRoUsAiEhFb02a2JV9EQBm+S4YnkGhSwCISEaSUSz0oX0RAGb5LhieQaFLAIhIRgJFarShfREAZbJZZqZFoUsAiEhGDHT80K19EQBlsllmpkWhSwCISEdSMB0IwX0RAGWyWWamRaFLAIhIRSXEjuy1fREAZbJZZqZFoUsAiEhGsRTIrLl9EQBnI1Swrk2hSwCISEVen7C82X0RAGdEJAK2UaFLAIhIRXjDN6DFfREAZwPWypY5oUsAiEhHnyr14MV9EQBlulN8jjWhSwCISEY+T1oorX0RAGdWvOCCKaFLAIhIR4U\\/m+itfREAZyicMootoUsAiEhGA7yBUKl9EQBnA9bKljmhSwCISEccPLV0nX0RAGW6U3yONaFLAIhIRaVRI1iRfREAZbpTfI41oUsAiEhExZX64L19EQBn0nZEch2hSwCISEatZRcY0X0RAGfSdkRyHaFLAIhIRh8MtGz5fREAZbpTfI41oUsAiEhHypgAyQF9EQBnKJwyii2hSwAqKCAiAgICA\\/Kuf4YkBEIeUj86BLRpCCiNjNjFhZTE3MTM4NDE0NzcyODAwOGM4MDU0YmVlNmQwOC4xNhCggdbs5SwZhnDMsidfREAhYeP6d31oUsBAAUgBIhIRL893SjlfREAZ1nrHj3xoUsAiEhGOuqDMM19EQBmwkfMNe2hSwCISEe3lq9UwX0RAGTmdH4x5aFLAIhIRT7b0lzxfREAZVpJ3iHZoUsAiEhEih1p1P19EQBkUsVL\\/bmhSwCISEes4RwU\\/X0RAGRNifn1taFLAIhIRT7wzlT5fREAZwgeq+2toUsAiEhFnoE0DNV9EQBlWkneIdmhSwCISEecpwokkX0RAGSEt+wJyaFLAIhIR5To91ydfREAZwgeq+2toUsAiEhGWAG3AJV9EQBkTYn59bWhSwCISEZKhWVAlX0RAGcIHqvtraFLAIhIRMoStux1fREAZwgeq+2toUsAiEhGScHAlH19EQBk5nR+MeWhSwCISES1SnQ4dX0RAGbCR8w17aFLAIhIRhNKufh1fREAZ1nrHj3xoUsAiEhHy+usuL19EQBnWesePfGhSwCISEU15CKgsX0RAGdZ6x498aFLAIhIRhVpjeihfREAZLitvk39oUsAiEhHPox9\\/MF9EQBle8kIVgWhSwCISEQ1I0V4eX0RAGS4rb5N\\/aFLAIhIRsp52YPZeREAZXvJCFYFoUsAiEhErW\\/E9+V5EQBk5nR+MeWhSwCISEf\\/meIv8XkRAGS9az4RzaFLAIhIRkoAPSQBfREAZFLFS\\/25oUsAiEhFqViK5AF9EQBnD9CaBcGhSwCISEZ\\/UXVj8XkRAGbRS2m5haFLAIhIRuf82gwJfREAZ2l9e3lNoUsAiEhE\\/1BwKBV9EQBnaX17eU2hSwCISEb4+ftIfX0RAGSCi1XlqaFLAIhIRLRRG4CRfREAZIKLVeWpoUsAiEhHL6xX3Jl9EQBkuMQH4aGhSwCISEYuqKWcnX0RAGSCi1XlqaFLAIhIR8ksSmSBfREAZcJqDcmRoUsAiEhFTgYSZM19EQBkuMQH4aGhSwCISEXDEUrA1X0RAGeq0LHZnaFLAIhIRKzD4RD1fREAZ6rQsdmdoUsAiEhEIPVx4LV9EQBnaX17eU2hSwFqlAQixARUpLbFDGSCjQ0XV76j1IiNjNjFhZTE3MTM4NDE0NzcyODAwOGM4MDU0YmVlNmQwOC4xNippaHR0cDovL2xoNS5nZ3BodC5jb20vZ2VSSUo2YW85c25jNHJfOW5uMWtrWGc3R1hEa21iS2V0UFgxOGNBaWh0R3VqV1k2dk1KNEVJTmMtZGlvbkcwOTBTTENXS1ZZV2JsYTVIWlJUNEVVMgIQAloSCP8BGdT7q4XXnnNNMgQQASgBCsUpCICAgIDEq5\\/hiQEQh5SPzoEtGkIKIzA5ODdlMDI3NmEwYzQ4OTZiYjdhNTNhMDQwNTI5YmVlLjE2ENHT0dn2LBnFxVG5iV5EQCGlSpS9pWhSwEABSAEaowIKIzNhNTBmYTQzY2ExYTQ2OGM5MmJlOTQ0YjllNjA2ZjgxLjE2EKOJls2BLRkBUMWNW15EQCE0g\\/jAjmhSwCgDMOgBQAGSAQIQApgBAaIBSgiBp8vHh9T15ZoBEOeCzsuBLRjn36nNgS0gx8XOzoEtKiYQ5QMY6d4CINRhKNRhMMkBOCCIAQ+QAQ+YAQ+lAXE9Sj+iAgIQATAFqgETEIIjGQAAAIAFoOs\\/IAQo3JKyA7gBubj1yoEtygFoaHR0cDovL2xoNi5nZ3BodC5jb20vTmVpX0I5RlA0TEFIZ09DbndkOE1qWDV0bmZUQ0ZMTXNqeE9EbGZJVTdkV2d6elNnZFpTVk1VSWc0YmNtNjhwVXdfQ2ZudTZCNU9fYUplSWYzaUEaQgojNmRkMDkzMTE5ZDExNDBjYmI5ZTQ4OTk1YWExZTJiOTEuMTYQ1IOs2fYsGRHHuriNXkRAIQOxbOaQaFLAQAFIARpCCiNhMzMyZGI4ZDU1Zjk0NmVkOTdmYmMyNTIzMzY2ODFiMC4xNhDT57XZ9iwZuB0aFqNeREAhDXIXYYpoUsBAAUgBGmgKI2Q2MTc5ZjNhN2I2MDQ0MDZhZDAxYWM4MmZjYjAwZmRhLjE2ELDQkc2BLRmYwK27eV5EQCFgHccPlWhSwCgBMFxAAZIBAhACmAEBqgEREPlBGQAAAGDSsu0\\/KM+a0Ba4AdGz0beBLRpCCiNlNzIxMGVkNTRiNWE0MDFmYjM0ZWUwODUwOWY5MTFmMS4xNhCm\\/sDZ9iwZJTyh159eREAhn1bRH5poUsBAAUgBIhIRO0u3qKdeREAZtMdaSKtoUsAiEhHUcOccnV5EQBmCPYjGqWhSwCISEbaFciyNXkRAGVsi0s2vaFLAIhIRUN1pxYleREAZlEYtyqxoUsAiEhHM5l5ViV5EQBm0x1pIq2hSwCISETbJLHqQXkRAGYI9iMapaFLAIhIRCm0hCpBeREAZ\\/Ke1RKhoUsAiEhHEv\\/WVml5EQBmCPYjGqWhSwCISEXnWAw+YXkRAGYI9iMapaFLAIhIRjfzSRZleREAZ+VoQQaVoUsAiEhFayPBAkV5EQBl6oz2\\/o2hSwCISEaSy\\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\\/GLnFkXkRAGdEJAK2UaFLAIhIRp1E84WReREAZiDLTLpZoUsAiEhExhyfvaV5EQBmIMtMulmhSwCISEZ\\/NHHZsXkRAGYgy0y6WaFLAIhIR2TIq5mxeREAZ7U+msJdoUsAiEhFVHULPal5EQBn\\/YXkymWhSwCISEddKgZxeXkRAGcBoTLSaaFLAIhIRDK2afF9eREAZSFTyt51oUsAiEhEjE44MX15EQBktZB82nGhSwCISEa7kgvZvXkRAGargaj2iaFLAIhIR8wmW8WdeREAZhxKYu6BoUsAiEhEylV+dcV5EQBkROcU5n2hSwCISESKdDGB9XkRAGS1kHzacaFLAIhIR02UA539eREAZLWQfNpxoUsAiEhFiSjKwfl5EQBmHEpi7oGhSwCISEdjiMbl7XkRAGRE5xTmfaFLAIhIR729KmXxeREAZquBqPaJoUsAiEhGigEqQf15EQBl6oz2\\/o2hSwCISEcbaVfeCXkRAGSQH48KmaFLAIhIRWf1hcIBeREAZJAfjwqZoUsAiEhEvVlYAgF5EQBn5WhBBpWhSwCISEWx1eWt4XkRAGflaEEGlaFLAIhIRt61hi3deREAZquBqPaJoUsAiEhGWCnh9cl5EQBmq4Go9omhSwCISEQFPYF6GXkRAGYI9iMapaFLAIhIR4aNs14NeREAZgj2IxqloUsAiEhHawndHhF5EQBm0x1pIq2hSwCISEX9kdj6HXkRAGZRGLcqsaFLAIhIRRRqkEINeREAZWyLSza9oUsAiEhFzwIseiF5EQBlbItLNr2hSwCISES+TuwJ+XkRAGVsi0s2vaFLAIhIRkNYGQHJeREAZ1NB20bJoUsAiEhG8l+f4bV5EQBmURi3KrGhSwCISEY3yGjtqXkRAGUF\\/pE+xaFLAWqUBCM0CFUhmYEMZuZWrST5KJaQiIzA5ODdlMDI3NmEwYzQ4OTZiYjdhNTNhMDQwNTI5YmVlLjE2KmlodHRwOi8vbGg2LmdncGh0LmNvbS9nRE9xYWRjSE9OaG1GWjh0M0QyRWoyWU1uSHBxYjJFdkJOX2RWUE9NZFhjYnQ0a2xfclNDNERkajBmeVljMEJYYVJ1NEloRl9jbTFSczFocmI2SEkyAhACWqcBCKEBFU+030IZAAANGjXxobUiI2EzMzJkYjhkNTVmOTQ2ZWQ5N2ZiYzI1MjMzNjY4MWIwLjE2KmtodHRwOi8vbGg1LmdncGh0LmNvbS9HUnJEaG1kVFV1cGpWRFlhTDJkNTJGVm93VEg3UEdVbElCYnpYRlFENXp4a3dyb0txTXJFT0IzRWF6U2kwaWpfVFpBNGh3MUU2VzJkTTZndl9pQ2RXZzICEAFapwEIjwMVT7TfQhldLx0LpF9ZSCIjYTMzMmRiOGQ1NWY5NDZlZDk3ZmJjMjUyMzM2NjgxYjAuMTYqa2h0dHA6Ly9saDUuZ2dwaHQuY29tL0dSckRobWRUVXVwalZEWWFMMmQ1MkZWb3dUSDdQR1VsSUJielhGUUQ1enhrd3JvS3FNckVPQjNFYXpTaTBpal9UWkE0aHcxRTZXMmRNNmd2X2lDZFdnMgIQAlqnAQiHAhVPtN9CGR\\/EKTsn3HFgIiNhMzMyZGI4ZDU1Zjk0NmVkOTdmYmMyNTIzMzY2ODFiMC4xNipraHR0cDovL2xoNS5nZ3BodC5jb20vR1JyRGhtZFRVdXBqVkRZYUwyZDUyRlZvd1RIN1BHVWxJQmJ6WEZRRDV6eGt3cm9LcU1yRU9CM0VhelNpMGlqX1RaQTRodzFFNlcyZE02Z3ZfaUNkV2cyAhABWqYBCGYVGMI0QxnbgBHhdajEHiIjNmRkMDkzMTE5ZDExNDBjYmI5ZTQ4OTk1YWExZTJiOTEuMTYqaWh0dHA6Ly9saDYuZ2dwaHQuY29tL0M0OUNwUFhHcHpweERNNHlweWR6YUtDQUJFT1pUVTFXX0JncGM0YTVsNEhNMkRGak05UnVxSjFoRndobkZ2TC1MQVdpWjdDbUliTjNrT1VfS01XeTIEEAEoAQq5FwiAgICAzKuf4YkBEIeUj86BLRpCCiMyMzliNDQzNWZkYzY0N2RhYTA1MTA4YTE3YmJhYjBlNC4xNhCL\\/YPaxywZ+bziqUdeREAhp3hcVItoUsBAAUgBGkIKI2YzYTdhOGYyOTY5MDQ4NDE5ZDNiOGRkMGM1MzQ5ZWY0LjEyEJyI0KT3LBl4DI\\/9LF5EQCGAgSBAhmhSwEABSAEiEhEcOUqPYF5EQBnU0HbRsmhSwCISEZTmPDFaXkRAGSG6\\/0uuaFLAIhIRzuZhA1ZeREAZQX+kT7FoUsAiEhGo4nhuTl5EQBlBf6RPsWhSwCISESJeTSNVXkRAGSG6\\/0uuaFLAIhIRwOpZHk1eREAZlEYtyqxoUsAiEhFXO0+uTF5EQBm0x1pIq2hSwCISEegSFGhbXkRAGYI9iMapaFLAIhIRxNPbwlBeREAZETnFOZ9oUsAiEhGSFhd+Sl5EQBl6oz2\\/o2hSwCISEdiKDwVNXkRAGXqjPb+jaFLAIhIR48YHjE9eREAZeqM9v6NoUsAiEhEiZBP8T15EQBn5WhBBpWhSwCISEQDTHmxQXkRAGSQH48KmaFLAIhIR1BYuXkteREAZJAfjwqZoUsAiEhFw\\/ilnSF5EQBn5WhBBpWhSwCISEWloLOlCXkRAGXqjPb+jaFLAIhIRV6cSh0deREAZquBqPaJoUsAiEhH2b\\/WvQ15EQBlIVPK3nWhSwCISEVwkIn03XkRAGRE5xTmfaFLAIhIR8b5nHTpeREAZ\\/Ke1RKhoUsAiEhGCOoN2OF5EQBm0x1pIq2hSwCISETKUWys\\/XkRAGfyntUSoaFLAIhIRzipgIkJeREAZgj2IxqloUsAiEhF9jF2gR15EQBm0x1pIq2hSwCISEQiAVidKXkRAGbTHWkiraFLAIhIReCxhl0peREAZlEYtyqxoUsAiEhH3NWgQSF5EQBmURi3KrGhSwCISEcX9fPBIXkRAGVsi0s2vaFLAIhIRGRyHYEleREAZQX+kT7FoUsAiEhF+G4DnS15EQBlBf6RPsWhSwCISEQkRwZg1XkRAGdTQdtGyaFLAIhIRMf2iSDReREAZIbr\\/S65oUsAiEhEMCI5oM15EQBm0x1pIq2hSwCISEeugj+UlXkRAGfyntUSoaFLAIhIRKKCTXiNeREAZ\\/Ke1RKhoUsAiEhHvn9L5HV5EQBlbItLNr2hSwCISER1H8zYSXkRAGdTQdtGyaFLAIhIRumznTRReREAZQX+kT7FoUsAiEhGlDcEGEF5EQBm0x1pIq2hSwCISEZ1MitYNXkRAGXqjPb+jaFLAIhIRwYR87Q9eREAZquBqPaJoUsAiEhGlk2uLFF5EQBmHEpi7oGhSwCISEay5PdAaXkRAGS1kHzacaFLAIhIRoL\\/Z1yxeREAZ0QkArZRoUsAiEhGVFLYAKV5EQBm+S4YnkGhSwCISEWxj0tshXkRAGWyWWamRaFLAIhIRW8fWVB9eREAZbJZZqZFoUsAiEhH4DweXG15EQBmIMtMulmhSwCISEaqyNNkXXkRAGcBoTLSaaFLAIhIRjavhMw1eREAZvkuGJ5BoUsAiEhHZJOY4FV5EQBlsllmpkWhSwCISEagNARkWXkRAGdEJAK2UaFLAIhIRN9v5JhteREAZ0QkArZRoUsAiEhGM+cbfFl5EQBnA9bKljmhSwCISEYz5xt8WXkRAGcD1sqWOaFLAIhIRL1eYFhheREAZ1a84IIpoUsAiEhE0Lqb6DV5EQBnVrzggimhSwCISEflAgigSXkRAGfSdkRyHaFLAIhIRBU1UZBteREAZzV7qGIRoUsAiEhHqSHjCIV5EQBmNLGWeiGhSwCISEVkBsoIjXkRAGcD1sqWOaFLAIhIR0dijEiNeREAZbpTfI41oUsAiEhH2\\/XxAJ15EQBnVrzggimhSwCISETGJi7AnXkRAGconDKKLaFLAIhIR5F5j3iteREAZjSxlnohoUsAiEhH2cFRuK15EQBn0nZEch2hSwCISEcUCWucoXkRAGfSdkRyHaFLAIhIR+EVQ8CVeREAZCQS+moVoUsAiEhFLalVpI15EQBkJBL6ahWhSwCISEdOXXWUuXkRAGY0sZZ6IaFLAIhIRiZhX7DBeREAZjSxlnohoUsAiEhFJ8Ur6NV5EQBmNLGWeiGhSwCISEUnxSvo1XkRAGY0sZZ6IaFLAIhIR\\/kQzkzJeREAZCQS+moVoUsAiEhFn8SMjMl5EQBnNXuoYhGhSwCISEYi9CD88XkRAGc1e6hiEaFLAIhIRI2k9CDteREAZjSxlnohoUsAiEhEjaT0IO15EQBmNLGWeiGhSwCISEZJMNRE4XkRAGfSdkRyHaFLAIhIRsBdT8TheREAZ1a84IIpoUsAiEhF3Okx4O15EQBnVrzggimhSwCISEXZCYt8+XkRAGW6U3yONaFLAIhIReWyLMzVeREAZwPWypY5oUsAiEhEvL33DNF5EQBlulN8jjWhSwCISEbRZaNo2XkRAGconDKKLaFLAIhIRVVps1S5eREAZ1a84IIpoUsAiEhF17npFL15EQBnKJwyii2hSwCISEYeUpZUwXkRAGb5LhieQaFLAIhIREKSfHDNeREAZvkuGJ5BoUsAiEhELs64KOV5EQBnI1Swrk2hSwCISEb0G6kM4XkRAGf9heTKZaFLAIhIRDLzWWjpeREAZ7U+msJdoUsAiEhEZksnqOV5EQBmIMtMulmhSwCISEctD40hAXkRAGcBoTLSaaFLAIhIRhKm1ATxeREAZ0QkArZRoUsAiEhHWH6iRO15EQBnI1Swrk2hSwCISEYPqb81EXkRAGb5LhieQaFLAIhIRQDhoVEdeREAZvkuGJ5BoUsAiEhHDTWDbSV5EQBm+S4YnkGhSwCISEeqMkaRIXkRAGdEJAK2UaFLAIhIR9PdezldeREAZ0QkArZRoUsAiEhGqTVFeV15EQBnI1Swrk2hSwCISEVtLWtdUXkRAGcjVLCuTaFLAIhIR0BBjUFJeREAZyNUsK5NoUsAiEhFGzl1ZT15EQBlsllmpkWhSwCISERzQT+lOXkRAGb5LhieQaFLAIhIRgDgnDlZeREAZwPWypY5oUsAiEhHigfu9VF5EQBnVrzggimhSwCISEfxOE6dSXkRAGconDKKLaFLAIhIRRCMcIFBeREAZyicMootoUsAiEhGRo0F5Tl5EQBnA9bKljmhSwCISEScjLRJLXkRAGconDKKLaFLAIhIRa24eokpeREAZ1a84IIpoUsAiEhFNiw8ySl5EQBmNLGWeiGhSwCISETnK6NhLXkRAGQkEvpqFaFLAIhIREw34SExeREAZ9J2RHIdoUsBapwEI0wIVkI\\/\\/QxljMOBaHGeUOCIjZjNhN2E4ZjI5NjkwNDg0MTlkM2I4ZGQwYzUzNDllZjQuMTIqaWh0dHA6Ly9saDQuZ2dwaHQuY29tLzFYT2tpcFd3Sm1TQXBJX2xFSEN1bF9xV1dKQkczOTdvZ2dDYWVtUGtGVlBtSWlGYm9YVE96R3ZuUDhCR052dXhhQ0ZDdXlvNUUxVFBDQmdpOUZVSzIEEAIoAVqmAQhFFZCP\\/0MZAV92x2CWIY0iI2YzYTdhOGYyOTY5MDQ4NDE5ZDNiOGRkMGM1MzQ5ZWY0LjEyKmlodHRwOi8vbGg0LmdncGh0LmNvbS8xWE9raXBXd0ptU0FwSV9sRUhDdWxfcVdXSkJHMzk3b2dnQ2FlbVBrRlZQbUlpRmJvWFRPekd2blA4QkdOdnV4YUNGQ3V5bzVFMVRQQ0JnaTlGVUsyBBACKAFapQEIqwMVkI\\/\\/QxljgB7YR0Q5xSIjZjNhN2E4ZjI5NjkwNDg0MTlkM2I4ZGQwYzUzNDllZjQuMTIqaWh0dHA6Ly9saDQuZ2dwaHQuY29tLzFYT2tpcFd3Sm1TQXBJX2xFSEN1bF9xV1dKQkczOTdvZ2dDYWVtUGtGVlBtSWlGYm9YVE96R3ZuUDhCR052dXhhQ0ZDdXlvNUUxVFBDQmdpOUZVSzICEAIKjggIgICAgNSrn+GJARCHlI\\/OgS0iEhH\\/Ko+tUV5EQBkuK2+Tf2hSwCISEV7ruYhKXkRAGV7yQhWBaFLAIhIRkDqxD01eREAZXvJCFYFoUsAiEhH0Z4FBRl5EQBmwkfMNe2hSwCISEc5GoqNBXkRAGdZ6x498aFLAIhIRSElX6EdeREAZcJ1LCnhoUsAiEhFvv3dGTl5EQBnWesePfGhSwCISEf4sLI9JXkRAGet7owZ1aFLAIhIRkLoaH0leREAZL1rPhHNoUsAiEhGZgxybKF5EQBnCB6r7a2hSwCISEchXniQpXkRAGVaSd4h2aFLAIhIR8P3g5CpeREAZ1nrHj3xoUsAiEhHdzqKiLl5EQBlwnUsKeGhSwCISEeDlrxc3XkRAGbCR8w17aFLAIhIRD53Q9zdeREAZqlibEX5oUsAiEhG0L\\/nOO15EQBk+rhaXgmhSwCISEfhTAEg5XkRAGT6uFpeCaFLAIhIREr8EQzFeREAZXvJCFYFoUsAiEhGDQP7JM15EQBle8kIVgWhSwCISEeCQJh4qXkRAGT6uFpeCaFLAIhIRDo4xECVeREAZPq4Wl4JoUsAiEhEOjjEQJV5EQBk+rhaXgmhSwCISEb8ZJxkiXkRAGV7yQhWBaFLAIhIRhuwhoCReREAZXvJCFYFoUsAiEhFWD\\/fNKF5EQBmqWJsRfmhSwCISEUeUxXgfXkRAGXCdSwp4aFLAIhIRvQ4skh9eREAZXvJCFYFoUsAiEhG85UT0Gl5EQBk+rhaXgmhSwCISEWCMQe8SXkRAGV7yQhWBaFLAIhIRszwv8wdeREAZqlibEX5oUsAiEhEfJ+THDV5EQBlwnUsKeGhSwCISEfY4BagOXkRAGbCR8w17aFLAIhIRv88RnxFeREAZ1nrHj3xoUsAiEhGFBLhpB15EQBkvWs+Ec2hSwCISEQ1vr48hXkRAGVaSd4h2aFLAIhIR\\/iJ2xiJeREAZIS37AnJoUsAiEhF2jBQYG15EQBkuMQH4aGhSwCISERmYAgkDXkRAGXCag3JkaFLAIhIRQxl8cf1dREAZXlmy5VloUsAiEhHpLCdLC15EQBkzbzNgVWhSwCISEekSmPkSXkRAGbbdMGteaFLAIhIRk05ATB5eREAZXlmy5VloUsAiEhH9ZTfOGF5EQBn1a91jWGhSwCISETWoGHElXkRAGfVr3WNYaFLAIhIRaU3nHC9eREAZPHMI4lZoUsAiEhFozDFkM15EQBk\\/ElzpXGhSwCISEfvXaDYvXkRAGd2dBe1faFLAIhIRk6aMGzheREAZcJqDcmRoUsAiEhHwPa5+Rl5EQBkgotV5amhSwCISEdGGmw5GXkRAGS4xAfhoaFLAIhIR44V\\/JUheREAZ6rQsdmdoUsAKsAUIgICAgNyrn+GJARCHlI\\/OgS0aQgojNGJjMDRlOGNlYmQ1NDg3MmE3ODU5NGMzMTcwOTQ1MjYuMTYQ9J33gPcsGZavy\\/CfXkRAIX78pUV9aFLAQAFIASISERQ7kNxYXkRAGXY7h2dbaFLAIhIRFTVi+GJeREAZdjuHZ1toUsAiEhHClH+jTV5EQBkuMQH4aGhSwCISEQXPIZRRXkRAGVaSd4h2aFLAIhIReVMmCVpeREAZOZ0fjHloUsAiEhH7bHJCWV5EQBkuK2+Tf2hSwCISER4hPuVlXkRAGS4rb5N\\/aFLAIhIRT883Y2teREAZXvJCFYFoUsAiEhFhTxjvdV5EQBk+rhaXgmhSwCISEbGlzqx5XkRAGapYmxF+aFLAIhIRc2lFQmVeREAZwgeq+2toUsAiEhHW+OjTil5EQBkvWs+Ec2hSwCISEeCoVVmWXkRAGV7yQhWBaFLAIhIRRQ5H15teREAZPq4Wl4JoUsAiEhEtWTdenl5EQBk+rhaXgmhSwCISER1Z1auhXkRAGdZ6x498aFLAIhIRejqy1J1eREAZcJ1LCnhoUsAiEhGKg8NEnl5EQBk5nR+MeWhSwCISEaqIn2KDXkRAGV5ZsuVZaFLAIhIRdp1ndZBeREAZdjuHZ1toUsAiEhEzeDITlV5EQBleWbLlWWhSwFqzAQj\\/ARVPkBhDGaPEmDcX0Cz5IiM0YmMwNGU4Y2ViZDU0ODcyYTc4NTk0YzMxNzA5NDUyNi4xNip1aHR0cDovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vWmRGTlRlTl9mWkxoaEdZT1NOZ0s0ZngyaEJ6MjAxcWVVUW43SktMQ0RQcWNjTjV1eE8zY2VjWW50YnZZV210MFlOZ0pfUFBnZ0doRV9DVFRZTl9BMgQQASgBEAEYASIYCICAgICAoJ\\/hiQESBwgBGAEw7AEaAggBIhYIgICAgIDgoeGJARIFCAEw6wEaAggB"

#alolan
# message="CpYCCICAgICkhJnhiQEQ7uyZz4EtGmwKIzQxYzRiYzFhODgwMDRhN2VhOTk4NTEyZGEwZGMxYjMzLjEyEK+4vsiBLRl5ymq6nlREQCEIrBxaZG9SwCgCMFlAAZIBBBACIEuYAQGqARMQny4ZAAAAgClK4D8gAyjokdsduAG2mN+xgS0aUAojOTM5ZTdhYTU0YmU1NDMzZWE5NDA3MTM1NGE4YjI2OTYuMTIQ7KSq1v8sGaMdN\\/xuVERAIQtioGtfb1LAQAFIAaoBCxkAAAAAAADwPyAGGkIKI2YwYTI4ODg3MzIzNDRmNjRhNjE5MjJlNTFlMTkyN2Q4LjEyEKbRqtb\\/LBmefeVBelREQCElQE0tW29SwEABSAEKEgiAgICArISZ4YkBEO7smc+BLQoSCICAgIC8hJnhiQEQ7uyZz4EtChIIgICAgISEmeGJARDu7JnPgS0KfwiAgICAjISZ4YkBEO7smc+BLRprCiM5MjcxMmI1NzI4YjQ0Mzg4YmExMDlkMWIzOTM5YjkxZC4xNhDuuvTOgS0ZQ8u6fyxUREAhP1QaMbNvUsAoATCpAkABkgEEEAEoBJgBAaoBERCuPBkAAADATMjMPyiNiKgiuAGRmrDIgS0KEgiAgICAlISZ4YkBEO7smc+BLQpWCICAgICchJnhiQEQ7uyZz4EtGkIKIzhjN2RhYjY0ODAxZTQ5NjA4MjIzNzFjYjRhNjRlY2E2LjE2EJ6VnNv3LBmGG\\/D5YVREQCH8Ny9OfG9SwEABSAEKnQMIgICAgPSCmeGJARDu7JnPgS0aQgojNGMxNjEwMjBhZWVlNGRlNGIyYzc0YmFjMWE2ODE0OTkuMTIQ7K\\/DjIAtGdEgBU8hVURAIQFRMGMKb1LAQAFIARpCCiM4NjA3YmZjMGE4NDM0YzBhOTJjNjMxNTFiZWNjZGFiYS4xNhCU54PIgC0ZBYasbvVUREAhy7vqAfNuUsBAAUgBGoACCiM5ZWQ1NzBkZWIxZWE0N2VhYjI1MDVkZjc1YTgwYzQwZi4xNhDijdvOgS0ZkjzX9+FUREAhS5NS0O1uUsAoAzDlAUABkgEEEAIoAZgBAaIBIgi90\\/vjs\\/qim6ABELrc1s6BLRi6ubLQgS0gmp\\/X0YEtMAWqARMQrwoZAAAAAFPs4j8gBSiR890JuAH6q9HFgS3KAWtodHRwOi8vbGgzLmdncGh0LmNvbS92d2dySERKUk9UUDJEc2RlX3o4eXFHVlZBTkFfR3hXRnhjclZUdzVxV0Jqc3BUbVZrT2MxenN3eVBUWGxZRFNiWFBUcUhBX080Qk9sN2hLOVo4emkwQQoSCICAgID8gpnhiQEQ7uyZz4EtClYIgICAgKSDmeGJARDu7JnPgS0aQgojNzJmYTVkNDJmYTQzNGM4MGI4MWI3M2EzZDdjZjJhZjEuMTYQzMG7xegsGZYKKqp+VURAIR8PfXcrb1LAQAFIAQoSCICAgIC8g5nhiQEQ7uyZz4EtChIIgICAgISDmeGJARDu7JnPgS0KvAIIgICAgIyDmeGJARDu7JnPgS0apwIKI2ZlYjNkNWE0MTMyMzRjNTdiY2RlNjliODg0NWQzZDNmLjE2EPe75MyBLRkNVMa\\/z1REQCHcZb\\/udG9SwCgCMMMDQAGSAQIQApgBAaIBSwj84MTDloW21rMBEJO448yBLRiTlb\\/OgS0g8\\/rjz4EtKicQaRjCmAEgzDoozDow8QE4XogBD5ABD5gBD6UBcT1KP6ICBBABIFAwBKoBExDgLhkAAABAVVThPyACKI3MnAy4AZ7SncOBLcoBa2h0dHA6Ly9saDYuZ2dwaHQuY29tLzF2dUpqcGhzN0dQZHBOX25fQVc4bHlGdXdhYV9ZUEJBY0pDYW9yMFg5SWV1aWU0WlZmLWZfU1lNbjZ0VFEweFpweXMxVmRqMG1hY2JRMWJZUmg2czdBChIIgICAgJSDmeGJARDu7JnPgS0KVgiAgICAnIOZ4YkBEO7smc+BLRpCCiM0OTdkNTk1MzBkMGM0MzcwOGVlMWFjMzNiZDA4MjdjNy4xNhDRsder\\/iwZn1inyvdUREAh\\/DVZox5vUsBAAUgBChIIgICAgOSDmeGJARDu7JnPgS0KEgiAgICA7IOZ4YkBEO7smc+BLQoSCICAgID0g5nhiQEQ7uyZz4EtChIIgICAgPyDmeGJARDu7JnPgS0KEgiAgICAxIOZ4YkBEO7smc+BLRABGAE="

#click pokestop
# message = "CiM0NjM0MjBkN2Q3NGU0MzA1OGJkZTc5MTNjOTI2N2U5My4xNiIRTElVIFBvc3QgRW50cmFuY2Uqd2h0dHA6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL1NfT2Jlbm5kT1BPeE9CTEtfdEhwdkJJMzJIUTRGeEdNdHlCU1JoSUUzZ19iQXFhcUZJU3lucXZINUI5ekVoRUxCdzFKeUNfZEhuYnoydWp5ZmNGVHlnSAFR38K68e5oREBZj8U2qWhmUsBiD0NXIFBvc3QKQ29sbGVnZYIBAA=="

#search fort
#quest pokemon encounter reward
# message = "CAESBAgBEAESBAgBEAESBQi9BRABEgYIARABGAESBggBEAEYARIHCL8FEAEYASjuBTCem+j1hi04AUoNCgQIASgCCgUIvQUoAVINCgQIASgCCgUIvwUoAWojNDYzNDIwZDdkNzRlNDMwNThiZGU3OTEzYzkyNjdlOTMuMTZynAIKxQEIBCIAogY1Q0hBTExFTkdFX0NBVENIX1dFQVRIRVJfRUFTWV9QS01OOjUwMTIyNTUwNzI5NzY1ODI1NDCoBozvrOPs7cbHRbAGAroGIUNIQUxMRU5HRV9DQVRDSF9XRUFUSEVSX0VBU1lfUEtNTsoGBgoCCAMQBdAGAdoGBggHQgIIJeAGyvPV9YYt6AbK89X1hi36BiM0NjM0MjBkN2Q3NGU0MzA1OGJkZTc5MTNjOTI2N2U5My4xNpgHgICAgICgoeGJARJSEgoKAS4QARoBLiABGiBxdWVzdF9jYXRjaF93ZWF0aGVyX2Jvb3N0X3BsdXJhbCIgcXVlc3RfY2F0Y2hfd2VhdGhlcl9ib29zdF9wbHVyYWwoAg=="

#search fort
#quest item berry
# message = "CAESBAgBEAESBAgBEAESBQi9BRABKPoBMIzy2vyGLTgESg0KBAgBKAIKBQi9BSgBaiNhZDUxNzI3NTYxMTU0NGU5OTlmYmMyYjI0NzMwN2FkYi4xNnL7AQq6AQgQogYtQ0hBTExFTkdFX0xBTkRfTklDRV9FQVNZOi02MjcyNzk1OTQ0OTkzNDgzNTYzqAbVqZzxqaqj+agBsAYCugYYQ0hBTExFTkdFX0xBTkRfTklDRV9FQVNZygYKCgYICEoCCAoQBdAGAdoGCQgCGgUIvQUQA+AGucrI/IYt6Aa5ysj8hi36BiNhZDUxNzI3NTYxMTU0NGU5OTlmYmMyYjI0NzMwN2FkYi4xNpgHgICAgICgn+GJARI8EgoKAS4QARoBLiABGhZxdWVzdF9sYW5kX25pY2VfcGx1cmFsIhZxdWVzdF9sYW5kX25pY2VfcGx1cmFs"

#search fort
#quest item stardust
# message = "CAESBQi9BRABEgQIARABEgQIARABEgQIARABKPoBMM3E5/yGLTgJSg0KBQi9BSgBCgQIASgDaiM2MTNiNTM0N2Y3NjQ0NmQ3YTU4YjMzZjM2NjcyY2RlNC4xMnKPAgq6AQgEIgCiBjBDSEFMTEVOR0VfQ0FUQ0hfV0VBVEhFUl9FQVNZOjU3NjIyODI5NzA0MjY2MDQ4NzGoBsf6vdzOuu/7T7AGAroGHENIQUxMRU5HRV9DQVRDSF9XRUFUSEVSX0VBU1nKBgYKAggDEAXQBgHaBgUIAyDIAeAG+5zV/IYt6Ab7nNX8hi36BiM2MTNiNTM0N2Y3NjQ0NmQ3YTU4YjMzZjM2NjcyY2RlNC4xMpgHgICAgICgn+GJARJQEgoKAS4QARoBLiABGiBxdWVzdF9jYXRjaF93ZWF0aGVyX2Jvb3N0X3BsdXJhbCIgcXVlc3RfY2F0Y2hfd2VhdGhlcl9ib29zdF9wbHVyYWw="


gmo_response_string = b64decode(message)
gmo = FortSearchResponse()
gmo.ParseFromString(gmo_response_string)
gmo_response_json = json.loads(MessageToJson(gmo))
# print(json.dumps(gmo_response_json))

def parseQuest(message):
    if message['challengeQuest']:
        quest = message['challengeQuest'].get('quest')

        reward = quest.get('questRewards')
        print(reward)
        # reward_type = reward.
        reward_type = _QUESTREWARD_TYPE.values_by_name[reward[0]['type']].number
        print(reward_type)
        if reward_type == 2: #Item reward
            reward_item = reward[0]['item']['item']
            reward_amount = reward[0]['item']['amount']
            print(f"{reward_amount} {reward_item}")
        elif reward_type == 3: #stardust reward
            reward_amount = reward[0]['stardust']
            print(f"{reward_amount} Dust")
        elif reward_type == 7: #pokemn encounter
            
parseQuest(gmo_response_json)
# def parseMessage(message):
#     #decode b64 delivered message from ++
#     response = b64decode(message)
#     ##decde protos to JSON
#     gmo = GetMapObjectsResponse()
#     gmo.ParseFromString(response)
#     gmo_response = json.loads(MessageToJson(gmo))
#     print(json.dumps(gmo_response))
#     print(gmo_response['clientWeather'][0]['gameplayWeather']['gameplayCondition'])
#     forts = []
#     fort_count = 0
#     #grab forts found, discard everything else.
#     for i, cell in enumerate(gmo_response['mapCells']):
#         fort = cell.get('forts', None)
#         if fort:
#             forts += fort
#             fort_count += len(fort)
#
#     for f in forts:
#         f_type = f.get('type', 0)
#         f_raid = f.get('raidInfo', None)
#         f_id = f['id']
#         f_lat = f['latitude']
#         f_lng = f['longitude']
#
#         # print(f_raid)
#
#         # if f_type == 0 and (f_raid or not gym_db.find_one({'id': f_id})): # Gym
#         if f_type == 0:
#             gym_info = gym_db.find_one({'id': f_id})
#             # print("Gym DB info: {}".format(gym_info))
#             # print("Gym data: {}".format(f))
#             # parseGym(f, gym_info)
#         # else:
#             # print("Pokesto data: {}".format(f))
#
#
#
# def parseGym(gymDetails, gymDBInfo):
#     gym_raid = gymDetails.get('raidInfo', {})
#     # print("Gym: {}".format(gymData['name']))
#     g_name = gymDBInfo.get('name', 'Unknown Gym Name')
#     g_id = gymDetails['id']
#     g_lat = gymDetails['latitude']
#     g_lon = gymDetails['longitude']
#     g_team = _TEAMCOLOR.values_by_name[gymDetails.get('ownedByTeam', 'NEUTRAL')].number
#     g_sponsor = gymDetails.get('sponsor', None)
#
#     if gym_raid:
#         r_spawn = float(gym_raid['raidSpawnMs']) / 1000.0
#         r_battle = float(gym_raid['raidBattleMs']) / 1000.0
#         r_end = float(gym_raid['raidEndMs']) / 1000.0
#         r_id = gym_raid['raidSeed']
#         r_level = _RAIDLEVEL.values_by_name[gym_raid['raidLevel']].number
#         r_exclusive = gym_raid.get('isExclusive', False)
#         r_exraid = gym_raid.get('isExRaidEligible', False)
#         r_boss = gym_raid.get('raidPokemon', None)  # optional
#
#         print("Found raid: {} level {} spawning at {} ({}) battle begins {} battle ends {}".format(r_id, r_level, r_spawn, g_team, r_battle, r_end))
#
#         raid = {
#             'id': r_id,
#             'level': r_level,
#             'time_spawn': r_spawn,
#             'time_battle': r_battle,
#             'time_end': r_end,
#             'exclusive': r_exclusive,
#             'isExRaidEligible': r_exraid
#         }
#
#         if r_boss:
#             rb_pkmn_id = _POKEMONID.values_by_name[r_boss['pokemonId']].number
#             rb_pkmn_cp = r_boss['cp']
#             rb_pkmn_move_fast = _POKEMONMOVE.values_by_name[r_boss['move1']].number
#             rb_pkmn_move_chrg = _POKEMONMOVE.values_by_name[r_boss['move2']].number
#             rb_pkmn_form = _FORM.values_by_name[r_boss['pokemonDisplay'].get('form', 'FORM_UNSET')].number
#
#             print("Raid boss: {} (cp {}) fast {} charge {} form: {}".format(
#                 rb_pkmn_id,
#                 rb_pkmn_cp,
#                 rb_pkmn_move_fast,
#                 rb_pkmn_move_chrg,
#                 rb_pkmn_form
#             ))
#
#             raid_boss = {
#                 'pokemon_id': rb_pkmn_id,
#                 'pokemon_form': rb_pkmn_form,
#                 'pokemon_cp': rb_pkmn_cp,
#                 'pokemon_move_fast': rb_pkmn_move_fast,
#                 'pokemon_move_charge': rb_pkmn_move_chrg
#             }
#
#             raid['boss'] = raid_boss  # append the boss dictionary to raid.
#
#
# def raid_chat(payload):
#     if config['telegram']['enabled']:
#         bot = telegram.Bot(config['telegram']['api_key'])
#
#     if config['discord']['enabled']:
#         raid_hook = config['discord']['raid_webhook']
#         egg_hook = config['discord']['egg_webhook']
#         exclusive_hook = config['discord']['exclusive_webhook']
#         sponsor_hook = config['discord']['sponsor_webhook']
#
#     pkmn_name = pkmn_names
#
#     teams = {
#         0: ('Gym Unclaimed', 'http://exiva.net/gym_unclaimed.png'),
#         1: ('Controlled by Mystic', 'http://exiva.net/gym_mystic.png'),
#         2: ('Controlled by Valor', 'http://exiva.net/gym_valor.png'),
#         3: ('Controlled by Instinct', 'http://exiva.net/gym_instinct.png')
#     }
#
#     r_tiers = {
#         1: (0xF994A6, 'http://exiva.net/pinkegg.png'),
#         2: (0xF994A6, 'http://exiva.net/pinkegg.png'),
#         3: (0xFCE407, 'http://exiva.net/goldegg.png'),
#         4: (0xFCE407, 'http://exiva.net/goldegg.png'),
#         5: (0x867DBF, 'http://exiva.net/legendegg.png'),
#     }
#
#     egg_sent = []
#     raid_sent = []
#     started_raids = []
#     gym_cities = {}  # todo: fix this hack.
#     while True:
#         try:
#             r_gyms = raids.get()
#             # print("Incoming gyms with raids: {}".format(r_gyms))
#             for r_gym in r_gyms:
#                 # print("Gym: {}".format(r_gym))
#                 raid = r_gym.get('raid')
#
#                 # print("Raid Details: {}".format(raid))
#                 r_boss = raid.get('boss', None)
#                 if (r_boss and raid['id'] not in started_raids) or (raid['id'] not in raid_sent):
#                         # print(raid)
#                         g_team, g_team_icon = teams.get(r_gym['team'])
#                         g_mapUrl = f"http://maps.google.com/maps?q={r_gym['lat']},{r_gym['lng']}"
#                         g_mapImg = f"https://maps.googleapis.com/maps/api/staticmap?center={r_gym['lat']},{r_gym['lng']}&zoom=15&size=400x200&key={config['discord']['gmaps']}&markers=anchor:31,39%7Cicon:{g_team_icon}%7C{r_gym['lat']},{r_gym['lng']}"
#                         g_navGoogle = make_googl(config['googl_key'], f"https://google.com/maps/dir/?api=1&destination={r_gym['lat']},{r_gym['lng']}")
#                         g_navApple = make_googl(config['googl_key'], f"http://maps.apple.com/maps?saddr=Current%20Location&daddr={r_gym['lat']},{r_gym['lng']}")
#                         g_navWaze = make_googl(config['googl_key'], f"http://exiva.net/waze-redirect.html?ll={r_gym['lat']},{r_gym['lng']}")
#                         r_gym['name'] = " ".join(r_gym['name'].split())
#
#                         if not gym_cities.get(r_gym['id']):  # create a cache todo: move to database
#                             r_city = getCity(r_gym['lat'], r_gym['lng'], key=config['geocoder'])
#                             gym_cities[r_gym['id']] = r_city  # store the city in local cache
#                         else:
#                             r_city = gym_cities.get(r_gym['id'])  # retrieve city from cache
#
#                         r_spawn = pendulum.from_timestamp(raid['time_spawn'], tz='US/Eastern').strftime("%I:%M %p")
#                         r_start = pendulum.from_timestamp(raid['time_battle'], tz='US/Eastern').strftime("%I:%M %p")
#                         r_end = pendulum.from_timestamp(raid['time_end'], tz='US/Eastern').strftime("%I:%M %p")
#                         r_color, r_egg = r_tiers.get(raid['level'])
#                         r_exclusive = 'Exclusive ' if raid['exclusive'] else ''
#
#                         if not r_boss:  # Boss hasn't spawned yet.
#                             # message = '{}: Level {} raid at {} (Gym controlled by {}) hatching at {}'.format(r_city, raid['level'], gym['name'], g_team, r_start)
#                             title = f"{r_city} {r_gym['name']}: {r_exclusive}level {raid['level']} egg hatching soon"
#                             message = f"{r_exclusive}Level {raid['level']} raid egg at {r_gym['name']} {r_city}. ({g_team}) Hatches at {r_start}."
#                             img = r_egg
#                         else:
#                             # message = '{}: Level {} {} {} CP raid at {} (gym controlled by {}) started! Ending at {}'.format(r_city, raid['level'], pkmn_name[r_boss_pkmn], r_boss['pokemon_cp'], gym['name'], g_team, r_end)
#                             r_boss_pkmn = r_boss.get('pokemon_id', None)
#                             r_boss_gamepress = make_googl(config['googl_key'], f"https://pokemongo.gamepress.gg/pokemon/{r_boss_pkmn}#raid-boss-counters")
#                             img = "http://assets.pokemon.com/assets/cms2/img/pokedex/full/{:03}.png".format(r_boss_pkmn)
#                             title = f"{r_city} {r_gym['name']}: {r_exclusive}level {raid['level']} {pkmn_name[r_boss_pkmn]} raid started"
#                             message = f"{r_exclusive}Level {raid['level']} {pkmn_name[r_boss_pkmn]} raid started at {r_gym['name']} {r_city}. Starts at {r_start}, Ends at {r_end}.\n\nSuggested counters: <{r_boss_gamepress}>"
#                             started_raids.append(raid['id'])
#
#                         if config['telegram']['enabled']:
#                             update = bot.sendMessage(chat_id=config['telegram']['channel_id'], parse_mode=ParseMode.MARKDOWN, text=f"{title}\n\n{message}")
#                             bot.sendLocation(chat_id=config['telegram']['channel_id'], latitude=r_gym['lat'], longitude=r_gym['lng'], reply_to_message_id=update.message_id, disable_notification=True)
#
#                         if config['discord']['enabled']:
#                             payload = {
#                                 "username": config['discord']['username'],
#                                 "avatar_url": config['discord']['avatar'],
#                                 "embeds": [{
#                                     "title": title,
#                                     "url": g_mapUrl,
#                                     "color": r_color,
#                                     "thumbnail": {
#                                         "url": img,
#                                         "height": 170, "width": 170
#                                     },
#                                     "image": {
#                                         "url": g_mapImg
#                                     }
#                                 }],
#                                 "content": f'{message}\n\nNavigate with Google Maps: <{g_navGoogle}> | Apple Maps: <{g_navApple}> | Waze: <{g_navWaze}>'
#                             }
#                             success = False
#                             while not success:
#                                 try:
#                                     if raid['exclusive']:
#                                         resp = requests.post("https://discordapp.com/api/webhooks/{}".format(exclusive_hook), json=payload)
#
#                                     if r_gym['sponsor']:
#                                         resp = requests.post("https://discordapp.com/api/webhooks/{}".format(sponsor_hook), json=payload)
#
#                                     if not r_boss:
#                                         resp = requests.post("https://discordapp.com/api/webhooks/{}".format(egg_hook), json=payload)
#                                     else:
#                                         resp = requests.post("https://discordapp.com/api/webhooks/{}".format(raid_hook), json=payload)
#                                     if resp.status_code == 204:
#                                         raid_sent.append(raid['id'])
#                                         success = True
#                                         time.sleep(1)
#                                     else:
#                                         print(f"raid webhook failed: {resp.status_code}.")
#                                         print(f"payload: {payload}")
#                                         time.sleep(4)
#                                 except RequestException as e:
#                                     time.sleep(3)
#                                     continue
#                 # print("Raids sent: {}".format(raid_sent))
#         except queue.Empty as e:
#             continue
#         time.sleep(1)
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
# parseMessage(message)
